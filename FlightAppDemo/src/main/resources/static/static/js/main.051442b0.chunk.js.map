{"version":3,"sources":["SeatSelection.js","Insurance.js","Payment.js","GuestPayment.js","App.js","reportWebVitals.js","index.js"],"names":["SeatSelection","_ref","onSeatSelect","flightID","selectedSeat","setSelectedSeat","useState","takenSeats","setTakenSeats","useEffect","async","response","fetch","concat","method","headers","Content-Type","data","json","error","console","fetchTakenSeats","isSeatTaken","index","handleSeatClick","section","row","seat","React","createElement","Fragment","className","renderSeats","seatMap","s","sectionRows","i","j","seatNumber","isSelected","isDisabled","push","key","onClick","disabled","handleContinue","log","seatIDToSend","Insurance","onInsuranceSubmit","setInsurance","chosenInsurance","handleInsuranceSubmit","Payment","onPaymentSubmit","hasInsurance","seatID","email","cardNumber","setCardNumber","expiry","setExpiry","cvv","setCvv","isPaymentSuccessful","setPaymentSuccessful","seatPrice","setSeatPrice","flightPrice","setFlightPrice","subtotal","setSubtotal","totalAmnt","setTotalAmnt","ticketID","setTicketID","recieveSeatPrice","gottenSeatPrice","recieveFlightPrice","gottenFlightPrice","getPriceDetails","calculateDiscount","calculateSubtotal","sendPaymentDetails","handlePaymentSuccessClose","resetAllFields","id","onSubmit","e","preventDefault","getTicketID","gottenTicketID","sendCustomerFlightDetails","htmlFor","type","pattern","value","onChange","target","maxLength","placeholder","Modal","isOpen","onRequestClose","contentLabel","GuestPayment","passengerName","setPassengerName","passengerEmail","setPassengerEmail","passengerPhone","setPassengerPhone","isEmailValid","setIsEmailValid","calculateAmount","body","JSON","stringify","name","emailAddr","phoneNum","customerPassword","sendPassengerInfo","enteredEmail","test","validateEmail","App","selectedOption","setSelectedOption","showModal","setShowModal","username","setUsername","password","setPassword","loggedInUser","setLoggedInUser","showTicketPurchaseForm","setShowTicketPurchaseForm","ticketId","setTicketId","showSeatSelection","setShowSeatSelection","showPayment","setShowPayment","showInsurance","setShowInsurance","destOptions","setDestOptions","selectedDest","setSelectedDest","availableFlights","setAvailableFlights","showSearchFlight","setShowSearchFlight","sendFlightID","setSendFlightID","sendSeatID","setSendSeatID","signupUsername","setSignupUsername","signupEmail","setSignupEmail","emailError","setEmailError","signupPhone","setSignupPhone","signupPassword","setSignupPassword","signupAddress","setSignupAddress","signupPostalCode","setSignupPostalCode","signupCity","setSignupCity","signupCountry","setSignupCountry","insurance","crewID","setCrewID","crewPassword","setCrewPassword","showPassnegerList","setShowPassengerList","passengerList","setPassengerList","isRegisteredUser","setIsRegisteredUser","loginAttemptError","setLoginAttemptError","uniqueDestOptions","Set","emailRegex","showCrewLogin","setShowCrewLogin","cancelNotification","setCancelNotification","message","isSuccess","isVisible","handleButtonClick","option","lowerCaseOption","toLowerCase","getAllDestinations","ok","Error","destList","handleModalClose","handlePaymentSubmit","paymentDetails","handleLogout","href","signupData","required","style","color","recieve","validateAcc","res","customers","window","alert","checkCrewLogin","length","map","passenger","customerID","setTimeout","destination","handleTicketPurchase","allFlightsOfLocation","getAllFlightsForLocation","flight","flight_id","departureCity","departureCountry","departureAirport","destinationCity","destinationCountry","destinationAirport","departureDate","departureTime","arrivalDate","arrivalTime","handleFlightSelection","handleSeatSelect","continueToInsurance","handleInsuranceContinue","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"+QAgJeA,MA7If,SAAsBC,GAA6B,IAA5BC,aAAEA,EAAYC,SAAEA,GAAUF,EAC/C,MAGOG,EAAcC,GAAmBC,mBAAS,OAC1CC,EAAYC,GAAiBF,mBAAS,IAE7CG,oBAAU,KAEgBC,WACtB,IACE,MAAMC,QAAiBC,MAAK,oEAAAC,OAC0CV,GACpE,CACEW,OAAQ,MACRC,QAAS,CACPC,eAAgB,sBAIhBC,QAAaN,EAASO,OAC5BV,EAAcS,GACd,MAAOE,GACPC,QAAQD,MAAM,8BAA+BA,KAIjDE,IACC,CAAClB,IAEJ,MAAMmB,EAAeC,GACZhB,EAAWgB,GAGdC,EAAkBA,CAACC,EAASC,EAAKC,KAGjCL,EAnCc,EAiCAI,EAAoBC,KAQpCvB,GACAA,EAAaqB,UAAYA,GACzBrB,EAAasB,MAAQA,GACrBtB,EAAauB,OAASA,GAEtBtB,EAAgB,MAChBH,EAAa,KAAM,KAAM,QAEzBG,EAAgB,CAAEoB,UAASC,MAAKC,SAChCzB,EAAauB,EAASC,EAAKC,MAsE/B,OACEC,IAAAC,cAAAD,IAAAE,SAAA,KACAF,IAAAC,cAAA,WACED,IAAAC,cAAA,SAAG,iBACHD,IAAAC,cAAA,SAAG,oBACHD,IAAAC,cAAA,SAAG,kBAELD,IAAAC,cAAA,OAAKE,UAAU,kBAlDGC,MAClB,MAAMC,EAAU,GAChB,IAAK,IAAIC,EAAI,EAAGA,EA9ED,EA8EeA,IAAK,CACjC,MAAMC,EAAc,GACpB,IAAK,IAAIC,EAAI,EAAGA,EAlFP,EAkFiBA,IAAK,CAC7B,MAAMV,EAAM,GACZ,IAAK,IAAIW,EAAI,EAAGA,EAnFF,EAmFmBA,IAAK,CACpC,MAAMC,EAAaD,EAAI,EACjBE,EACJnC,GACAA,EAAaqB,UAAYS,GACzB9B,EAAasB,MAAQU,GACrBhC,EAAauB,OAASU,EAElBG,EAAalB,EA3FP,EA0FMc,EAAkBC,GAGpCX,EAAIe,KACFb,IAAAC,cAAA,UACEa,IAAG,QAAA7B,OAAUqB,EAAC,KAAArB,OAAIuB,EAAC,KAAAvB,OAAIwB,GACvBM,QAASA,IAAMnB,EAAgBU,EAAGE,EAAGC,GACrCN,UAAS,QAAAlB,OAAU0B,EAAa,WAAa,IAC7CK,SAAUJ,GAAW,IAAA3B,OAEhBqB,EAAI,EAAC,MAAArB,OAAKuB,EAAI,EAAC,SAAAvB,OAAQyB,KAIlCH,EAAYM,KACVb,IAAAC,cAAA,OAAKa,IAAG,OAAA7B,OAASqB,EAAC,KAAArB,OAAIuB,GAAKL,UAAU,YAClCL,IAIPO,EAAQQ,KACNb,IAAAC,cAAA,OAAKa,IAAG,WAAA7B,OAAaqB,GAAKH,UAAU,WAClCH,IAAAC,cAAA,UAAI,YACJD,IAAAC,cAAA,OAAKE,UAAU,YAAYI,KAIjC,OAAOF,GAWJD,GACA5B,GACCwB,IAAAC,cAAA,UAAQE,UAAU,kBAAkBY,QA5EnBE,KACrB3C,EACEE,EAAaqB,QACbrB,EAAasB,IACbtB,EAAauB,MACb,GAEFP,QAAQ0B,IAAI1C,EAAasB,KACzBN,QAAQ0B,IAAI1C,EAAauB,MACzBP,QAAQ0B,IAAI3C,GACZ,MAAM4C,EAAgC,IAAd5C,EAAW,GAA2B,EAAjBC,EAAasB,KAAUtB,EAAauB,KAAO,GACxFP,QAAQ0B,IAAIC,GAEZnC,MAAK,kDAAAC,OAAmDkC,GACpD,CACEjC,OAAQ,OACRC,QAAS,CACPC,eAAgB,wBA2DyC,qBClGtDgC,MAlCf,SAAkB/C,GAAsC,IAArCgD,kBAAEA,EAAiBC,aAAEA,GAAcjD,EAUpD,OACE2B,IAAAC,cAAA,WACED,IAAAC,cAAA,OAAKE,UAAU,kBACbH,IAAAC,cAAA,OAAKE,UAAU,uBACbH,IAAAC,cAAA,UAAI,8BACJD,IAAAC,cAAA,UAAID,IAAAC,cAAA,SAAG,WACPD,IAAAC,cAAA,WACAD,IAAAC,cAAA,WAAK,kCAEHD,IAAAC,cAAA,WAAS,uBACTD,IAAAC,cAAA,WAAS,kCACTD,IAAAC,cAAA,WACAD,IAAAC,cAAA,WACAD,IAAAC,cAAA,UAAQc,QAlBMQ,KACtBD,GAAa,GACbD,MAgB0C,aAIxCrB,IAAAC,cAAA,WACAD,IAAAC,cAAA,WACAD,IAAAC,cAAA,UAAQc,QA5BkBS,KAC5BH,MA2B0C,iDCmK/BI,MA/Lf,SAAgBpD,GAA6D,IAA5DqD,gBAAEA,EAAeC,aAAEA,EAAYC,OAAEA,EAAMrD,SAAEA,EAAQsD,MAAEA,GAAOxD,EACzE,MAAOyD,EAAYC,GAAiBrD,mBAAS,KACtCsD,EAAQC,GAAavD,mBAAS,KAC9BwD,EAAKC,GAAUzD,mBAAS,KACxB0D,EAAqBC,GAAwB3D,oBAAS,IACtD4D,EAAWC,GAAgB7D,mBAAS,IACpC8D,EAAaC,GAAkB/D,mBAAS,IACxCgE,EAAUC,GAAejE,mBAAS,IAClCkE,EAAWC,GAAgBnE,mBAAS,IACpCoE,EAAUC,GAAerE,mBAAS,GAEzCG,oBAAU,KACgBC,WACtB,MAAMkE,QAAyBhE,MAAK,yDAAAC,OACuB2C,GACzD,CACE1C,OAAQ,MACRC,QAAS,CACPC,eAAgB,sBAKhB6D,QAAwBD,EAAiB1D,OAC/CiD,EAAaU,GAEb,MAAMC,QAA2BlE,MAAK,sEAAAC,OACkCV,GACtE,CACEW,OAAQ,MACRC,QAAS,CACPC,eAAgB,sBAKhB+D,QAA0BD,EAAmB5D,OACnDmD,EAAeU,IAGjBC,GACA5D,QAAQ0B,IAAIW,IACX,IAEHhD,oBAAU,KACR,MAAMwE,EAA+B,KAAXX,EAA6B,KAAXA,EAAkB,GAC9DlD,QAAQ0B,IAAImC,GACZR,EAAaQ,GACb7D,QAAQ0B,IAAI0B,IACX,CAACF,IAEJ7D,oBAAU,KACRyE,KACC,CAAChB,EAAWE,EAAab,IAE5B,MAAM2B,EAAoBA,KAEtBX,EADEhB,EACUW,EAAYE,EAAc,GAE1BF,EAAYE,IAqB5B3D,oBAAU,KACR0E,KACC,CAACT,IAEJ,MAAMS,EAAqBA,KACzBvE,MAAK,kDAAAC,OAC+C6C,EAAU,KAAA7C,OAAI+C,EAAM,KAAA/C,OAAIiD,EAAG,KAAAjD,OAAI2D,EAAS,KAAA3D,OAAI6D,GAC9F,CACE5D,OAAQ,OACRC,QAAS,CACPC,eAAgB,uBAclBoE,EAA4BA,KAChCnB,GAAqB,GACrBoB,IACA/B,EAAgB,CAAEI,aAAYE,SAAQE,SAGlCuB,EAAiBA,KACrB1B,EAAc,IACdE,EAAU,IACVE,EAAO,IACPE,GAAqB,GACrBE,EAAa,GACbE,EAAe,GACfE,EAAY,GACZE,EAAa,GACbE,EAAY,IAGd,OACE/C,IAAAC,cAAA,OAAKE,UAAU,gBACbH,IAAAC,cAAA,UAAI,mBACJD,IAAAC,cAAA,OAAKyD,GAAG,gBACN1D,IAAAC,cAAA,UAAI,4BACJD,IAAAC,cAAA,WAAK,gBAAcqC,GACnBtC,IAAAC,cAAA,WAAK,kBAAgBuC,GACpBb,EACC3B,IAAAC,cAAA,WAAK,wBAELD,IAAAC,cAAA,WAAK,iCAEPD,IAAAC,cAAA,WAAK,cAAYyC,GACjB1C,IAAAC,cAAA,WAAK,SAAkB,IAAXyC,GACZ1C,IAAAC,cAAA,WAAK,uEAGLD,IAAAC,cAAA,WACED,IAAAC,cAAA,SAAG,kBAAgB2C,KAGvB5C,IAAAC,cAAA,QAAM0D,SA/CW7E,UACnB8E,EAAEC,sBAlC8B/E,WAChC,MAAMgF,QAAoB9E,MAAK,iDAAAC,OACoB4C,EAAK,KAAA5C,OAAIV,EAAQ,KAAAU,OAAI2C,EAAM,KAAA3C,OAAI2D,EAAS,WAAA3D,OAAU0C,GACnG,CACEzC,OAAQ,OACRC,QAAS,CACPC,eAAgB,sBAKhB2E,QAAuBD,EAAYxE,OACzCyD,EAAYgB,GACZvE,QAAQ0B,IAAI,aAAc6C,GAC1BvE,QAAQ0B,IAAI,aAAc4B,IAqBpBkB,GAGN3B,GAAqB,KA2CjBrC,IAAAC,cAAA,SAAOgE,QAAQ,cAAa,eAC5BjE,IAAAC,cAAA,SACEiE,KAAK,OACLR,GAAG,aACHS,QAAQ,UACRC,MAAOtC,EACPuC,SAAWT,GAAM7B,EAAc6B,EAAEU,OAAOF,SAE1CpE,IAAAC,cAAA,OAAKE,UAAU,iBACbH,IAAAC,cAAA,SAAOgE,QAAQ,UAAS,eACxBjE,IAAAC,cAAA,SACEiE,KAAK,OACLR,GAAG,SACHU,MAAOpC,EACPmC,QAAQ,SACRE,SAAWT,GAAM3B,EAAU2B,EAAEU,OAAOF,OACpCG,UAAU,IACVC,YAAY,UAGhBxE,IAAAC,cAAA,SAAOgE,QAAQ,OAAM,OACrBjE,IAAAC,cAAA,SACEiE,KAAK,OACLR,GAAG,MACHU,MAAOlC,EACPiC,QAAQ,SACRE,SAAWT,GAAMzB,EAAOyB,EAAEU,OAAOF,OACjCG,UAAU,IACVC,YAAY,QAEdxE,IAAAC,cAAA,UAAQiE,KAAK,UAAS,mBAExBlE,IAAAC,cAACwE,IAAK,CACJC,OAAQtC,EACRuC,eAAgBnB,EAChBoB,aAAa,yBAEb5E,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,uBACJD,IAAAC,cAAA,SAAG,iDACHD,IAAAC,cAAA,UAAQc,QAASyC,GAA2B,WCwEvCqB,MAhQf,SAAqBxG,GAAsD,IAArDqD,gBAAEA,EAAeC,aAAEA,EAAYC,OAAEA,EAAMrD,SAAEA,GAAUF,EACvE,MAAOyD,EAAYC,GAAiBrD,mBAAS,KACtCsD,EAAQC,GAAavD,mBAAS,KAC9BwD,EAAKC,GAAUzD,mBAAS,KACxB0D,EAAqBC,GAAwB3D,oBAAS,IACtD4D,EAAWC,GAAgB7D,mBAAS,IACpC8D,EAAaC,GAAkB/D,mBAAS,IACxCgE,EAAUC,GAAejE,mBAAS,IAClCkE,EAAWC,GAAgBnE,mBAAS,IACpCoE,EAAUC,GAAerE,mBAAS,IAClCoG,EAAeC,GAAoBrG,mBAAS,KAC5CsG,EAAgBC,GAAqBvG,mBAAS,KAC9CwG,EAAgBC,GAAqBzG,mBAAS,KAC9C0G,EAAcC,GAAmB3G,oBAAS,GAajDG,oBAAU,KACgBC,WACtB,MAAMkE,QAAyBhE,MAAK,yDAAAC,OACuB2C,GACzD,CACE1C,OAAQ,MACRC,QAAS,CACPC,eAAgB,sBAKhB6D,QAAwBD,EAAiB1D,OAC/CiD,EAAaU,GAEb,MAAMC,QAA2BlE,MAAK,sEAAAC,OACkCV,GACtE,CACEW,OAAQ,MACRC,QAAS,CACPC,eAAgB,sBAKhB+D,QAA0BD,EAAmB5D,OACnDmD,EAAeU,IAGjBC,IACC,IAEHvE,oBAAU,KACR,MAAMyG,EAA6B,KAAX5C,EACxBlD,QAAQ0B,IAAIoE,GACZzC,EAAayC,GACb9F,QAAQ0B,IAAI0B,IACX,CAACF,IAEJ7D,oBAAU,KACRyE,KACC,CAAChB,EAAWE,EAAab,IAE5B,MAAM2B,EAAoBA,KAEtBX,EADEhB,EACUW,EAAYE,EAAc,GAE1BF,EAAYE,IAyBtBwB,EAA4BlF,eArBRA,iBACDE,MACrB,wDACA,CACEE,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElBmG,KAAMC,KAAKC,UAAU,CACnBC,KAAMZ,EACNa,UAAWX,EACXY,SAAUV,EACVW,iBAAkB,UAUlBC,GAEN,MAAMhC,QAAoB9E,MAAK,iDAAAC,OACoB+F,EAAc,KAAA/F,OAAIV,EAAQ,KAAAU,OAAI2C,EAAM,KAAA3C,OAAI2D,EAAS,WAAA3D,OAAU0C,GAC5G,CACEzC,OAAQ,OACRC,QAAS,CACPC,eAAgB,sBAKhB2E,QAAuBD,EAAYxE,OACzCyD,EAAYgB,GACZvE,QAAQ0B,IAAI,aAAc6C,GAC1BvE,QAAQ0B,IAAI,aAAc4B,IAG5BjE,oBAAU,KACR0E,KACC,CAACT,IAEJ,MAAMS,EAAqBA,KACzBvE,MAAK,kDAAAC,OAC+C6C,EAAU,KAAA7C,OAAI+C,EAAM,KAAA/C,OAAIiD,EAAG,KAAAjD,OAAI2D,EAAS,KAAA3D,OAAI6D,GAC9F,CACE5D,OAAQ,OACRC,QAAS,CACPC,eAAgB,uBAclBoE,EAA4BA,KAChCnB,GAAqB,GACrBoB,IACA/B,EAAgB,CAAEI,aAAYE,SAAQE,SAGlCuB,EAAiBA,KACrB1B,EAAc,IACdE,EAAU,IACVE,EAAO,IACPE,GAAqB,GACrBE,EAAa,GACbE,EAAe,GACfE,EAAY,GACZE,EAAa,GACbE,EAAY,GACZgC,EAAiB,IACjBE,EAAkB,IAClBE,EAAkB,IAClBE,GAAgB,IAGlB,OACErF,IAAAC,cAAA,OAAKE,UAAU,gBACbH,IAAAC,cAAA,UAAI,mBACJD,IAAAC,cAAA,OAAKyD,GAAG,gBACN1D,IAAAC,cAAA,UAAI,4BACJD,IAAAC,cAAA,WAAK,gBAAcqC,GACnBtC,IAAAC,cAAA,WAAK,kBAAgBuC,GACpBb,EACC3B,IAAAC,cAAA,WAAK,wBAELD,IAAAC,cAAA,WAAK,iCAEPD,IAAAC,cAAA,WAAK,cAAYyC,GACjB1C,IAAAC,cAAA,WAAK,SAAkB,IAAXyC,GACZ1C,IAAAC,cAAA,WACED,IAAAC,cAAA,SAAG,kBAAgB2C,KAGvB5C,IAAAC,cAAA,QAAM0D,SAhDW7E,UACnB8E,EAAEC,uBACIG,IAGN3B,GAAqB,KA4CjBrC,IAAAC,cAAA,SAAOgE,QAAQ,iBAAgB,kBAC/BjE,IAAAC,cAAA,SACEiE,KAAK,OACLR,GAAG,gBACHU,MAAOU,EACPT,SAAWT,GAAMmB,EAAiBnB,EAAEU,OAAOF,SAG7CpE,IAAAC,cAAA,SAAOgE,QAAQ,kBAAiB,mBAChCjE,IAAAC,cAAA,SACEiE,KAAK,QACLR,GAAG,iBACHU,MAAOY,EACPX,SA/KmBT,IACzB,MAAMmC,EAAenC,EAAEU,OAAOF,MAC9Ba,EAAkBc,GAClBV,EARqBxD,IACF,6BACDmE,KAAKnE,GAMPoE,CAAcF,QA8KxBX,GACApF,IAAAC,cAAA,KAAGE,UAAU,iBAAgB,uCAG/BH,IAAAC,cAAA,SAAOgE,QAAQ,kBAAiB,mBAChCjE,IAAAC,cAAA,SACEiE,KAAK,MACLR,GAAG,iBACHU,MAAOc,EACPb,SAAWT,GAAMuB,EAAkBvB,EAAEU,OAAOF,SAG9CpE,IAAAC,cAAA,SAAOgE,QAAQ,cAAa,eAC5BjE,IAAAC,cAAA,SACEiE,KAAK,OACLR,GAAG,aACHS,QAAQ,UACRC,MAAOtC,EACPuC,SAAWT,GAAM7B,EAAc6B,EAAEU,OAAOF,SAE1CpE,IAAAC,cAAA,OAAKE,UAAU,iBACbH,IAAAC,cAAA,SAAOgE,QAAQ,UAAS,eACxBjE,IAAAC,cAAA,SACEiE,KAAK,OACLR,GAAG,SACHU,MAAOpC,EACPmC,QAAQ,SACRE,SAAWT,GAAM3B,EAAU2B,EAAEU,OAAOF,OACpCG,UAAU,IACVC,YAAY,UAGhBxE,IAAAC,cAAA,SAAOgE,QAAQ,OAAM,OACrBjE,IAAAC,cAAA,SACEiE,KAAK,OACLR,GAAG,MACHU,MAAOlC,EACPiC,QAAQ,SACRE,SAAWT,GAAMzB,EAAOyB,EAAEU,OAAOF,OACjCG,UAAU,IACVC,YAAY,QAEdxE,IAAAC,cAAA,UAAQiE,KAAK,UAAS,mBAExBlE,IAAAC,cAACwE,IAAK,CACJC,OAAQtC,EACRuC,eAAgBnB,EAChBoB,aAAa,yBAEb5E,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,uBACJD,IAAAC,cAAA,SAAG,iDACHD,IAAAC,cAAA,UAAQc,QAASyC,GAA2B,WC4evC0C,MAluBf,WACE,MAAOC,EAAgBC,GAAqB1H,mBAAS,OAC9C2H,EAAWC,GAAgB5H,oBAAS,IACpC6H,EAAUC,GAAe9H,mBAAS,KAClC+H,EAAUC,GAAehI,mBAAS,KAClCiI,EAAcC,GAAmBlI,mBAAS,OAC1CmI,EAAwBC,GAA6BpI,oBAAS,IAI9DqI,EAAUC,GAAetI,mBAAS,KAElCuI,EAAmBC,GAAwBxI,oBAAS,IACpDyI,EAAaC,GAAkB1I,oBAAS,IACxC2I,EAAeC,GAAoB5I,oBAAS,IAC5C6I,EAAaC,GAAkB9I,mBAAS,KACxC+I,EAAcC,GAAmBhJ,mBAAS,KAC1CiJ,EAAkBC,GAAuBlJ,mBAAS,KAClDmJ,EAAkBC,GAAuBpJ,oBAAS,IAClDqJ,EAAcC,GAAmBtJ,mBAAS,IAC1CuJ,EAAYC,GAAiBxJ,mBAAS,IACtCyJ,EAAgBC,GAAqB1J,mBAAS,KAC9C2J,EAAaC,GAAkB5J,mBAAS,KACxC6J,EAAYC,GAAiB9J,mBAAS,KACtC+J,EAAaC,GAAkBhK,mBAAS,KACxCiK,EAAgBC,GAAqBlK,mBAAS,KAC9CmK,EAAeC,GAAoBpK,mBAAS,KAC5CqK,EAAkBC,GAAuBtK,mBAAS,KAClDuK,EAAYC,GAAiBxK,mBAAS,KACtCyK,GAAeC,IAAoB1K,mBAAS,KAC5C2K,GAAW/H,IAAgB5C,oBAAS,IACpC4K,GAAQC,IAAa7K,mBAAS,KAC9B8K,GAAcC,IAAmB/K,mBAAS,KAC1CgL,GAAmBC,IAAwBjL,oBAAS,IACpDkL,GAAeC,IAAoBnL,mBAAS,KAC5CoL,GAAkBC,IAAuBrL,oBAAS,IAClDsL,GAAmBC,IAAwBvL,mBAAS,IACrDwL,GAAoB,IAAI,IAAIC,IAAI5C,IAChC6C,GAAa,8BACZC,GAAeC,IAAoB5L,oBAAS,IAC5C6L,GAAoBC,IAAyB9L,mBAAS,CAC3D+L,QAAS,GACTC,WAAW,EACXC,WAAW,IAGPC,GAAqBC,IACzB,MAAMC,EAAkBD,EAAOE,cAC/B3E,EAAkB0E,GACM,WAApBA,GACFxE,GAAa,GACbQ,GAA0B,IACG,UAApBgE,GAEThE,GAA0B,GAC1BR,GAAa,GACbF,EAAkB,oBACW,oBAApB0E,GACThE,GAA0B,GAC1BR,GAAa,IACgB,kBAApBwE,GACThE,GAA0B,GAC1BR,GAAa,GACbF,EAAkB0E,IACW,iBAApBA,EACT1E,EAAkB,UACW,cAApB0E,IACTxE,GAAa,GACbF,EAAkB,cAClBkE,IAAiB,IAGnBU,MA2CFnM,oBAAU,KACRmM,MACC,IAEH,MAAMA,GAAqBlM,UACzB,IACE,MAAMC,QAAiBC,MAAK,4DAE1B,CACEE,OAAQ,MACRC,QAAS,CACPC,eAAgB,sBAItB,IAAKL,EAASkM,GACZ,MAAM,IAAIC,MAAM,+BAElB,MAAMC,QAAiBpM,EAASO,OAChCkI,EAAe2D,GACf,MAAO5L,GACPC,QAAQD,MAAM,gDAAiDA,KA4D7D6L,GAAmBA,KACvB9E,GAAa,GAEbI,EAAY,KA6HR2E,GAAuBC,IAC3B9L,QAAQ0B,IAAI,mBAAoBoK,GAEhClE,GAAe,GACfhB,EAAkB,OASpB,OACEpG,IAAAC,cAAA,OAAKE,UAAU,aACbH,IAAAC,cAAA,OAAKE,UAAU,UACbH,IAAAC,cAAA,MAAIE,UAAU,SAAQ,iBACrBwG,GACC3G,IAAAC,cAAA,OAAKE,UAAU,aACbH,IAAAC,cAAA,YAAM,gBAAc0G,GACpB3G,IAAAC,cAAA,UAAQc,QAvDGwK,KAEnB3E,EAAgB,MAChBR,EAAkB,MAClBE,GAAa,GACbE,EAAY,IACZE,EAAY,IACZI,GAA0B,GAC1BY,EAAgB,IAChBM,EAAgB,GAChBE,EAAc,GACd5G,IAAa,GACb4F,GAAqB,GACrBE,GAAe,GACfE,GAAiB,GACjBQ,GAAoB,GACpBwC,IAAiB,GACjBP,IAAoB,GACpBS,GAAsB,CACpBC,QAAS,GACTC,WAAW,EACXC,WAAW,MAkC0B,aAIrC3K,IAAAC,cAAA,OAAKE,UAAU,0BACXwG,GAAmC,OAAnBR,GAChBnG,IAAAC,cAAA,OAAKE,UAAU,8BACbH,IAAAC,cAAA,UAAI,eACJD,IAAAC,cAAA,UACEE,UAAU,kBACV+D,KAAK,SACLnD,QAASA,IAAM6J,GAAkB,WAClC,UAGD5K,IAAAC,cAAA,UACEE,UAAU,kBACV+D,KAAK,SACLnD,QAASA,IAAM6J,GAAkB,UAClC,SAGD5K,IAAAC,cAAA,UACEE,UAAU,kBACV+D,KAAK,SACLnD,QAASA,IAAM6J,GAAkB,kBAClC,iBAGD5K,IAAAC,cAAA,UACEE,UAAU,kBACV+D,KAAK,SACLnD,QAASA,IAAM6J,GAAkB,cAClC,cAGD5K,IAAAC,cAAA,KACEuL,KAAK,IACLrL,UAAU,kBACVY,QAASA,IAAM6J,GAAkB,iBAClC,wCAMe,WAAnBzE,GACCnG,IAAAC,cAAA,OAAKE,UAAU,eACbH,IAAAC,cAAA,UAAI,WACJD,IAAAC,cAAA,QAAM0D,SA9TMC,IAGpB,GAFAA,EAAEC,kBAEGuG,GAAWpE,KAAKqC,GAEnB,YADAG,EAAc,uCAIhB,MAAMiD,EAAa,CACjB/F,KAAMyC,EACNxC,UAAW0C,EACXzC,SAAU6C,EACV5C,iBAAkB8C,GAEpBnJ,QAAQ0B,IAAI,eAAgBuK,GAE5BzM,MAAK,mDAAAC,OACgD4J,EAAa,KAAA5J,OAAI8J,EAAgB,KAAA9J,OAAIgK,EAAU,KAAAhK,OAAIkK,IACtG,CACEjK,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElBmG,KAAMC,KAAKC,UAAUgG,KAIzBrD,EAAkB,IAClBE,EAAe,IACfI,EAAe,IACfE,EAAkB,IAClBE,EAAiB,IACjBE,EAAoB,IACpBE,EAAc,IACdE,GAAiB,IAGjBhD,EAAkB,QA0RRpG,IAAAC,cAAA,SAAOgE,QAAQ,mBAAkB,uBACjCjE,IAAAC,cAAA,SACEiE,KAAK,OACLR,GAAG,kBACHU,MAAO+D,EACP9D,SAAWT,GAAMwE,EAAkBxE,EAAEU,OAAOF,OAC5CsH,UAAQ,IAEV1L,IAAAC,cAAA,SAAOgE,QAAQ,gBAAe,SAC9BjE,IAAAC,cAAA,SACEiE,KAAK,QACLR,GAAG,eACHU,MAAOiE,EACPhE,SAAWT,IACT0E,EAAe1E,EAAEU,OAAOF,OACxBoE,EAAc,KAEhBkD,UAAQ,IAETnD,GAAcvI,IAAAC,cAAA,KAAG0L,MAAO,CAAEC,MAAO,QAAUrD,GAE5CvI,IAAAC,cAAA,SAAOgE,QAAQ,gBAAe,gBAC9BjE,IAAAC,cAAA,SACEiE,KAAK,MACLR,GAAG,eACHU,MAAOqE,EACPpE,SAAWT,GAAM8E,EAAe9E,EAAEU,OAAOF,OACzCsH,UAAQ,IAEV1L,IAAAC,cAAA,SAAOgE,QAAQ,mBAAkB,YACjCjE,IAAAC,cAAA,SACEiE,KAAK,WACLR,GAAG,kBACHU,MAAOuE,EACPtE,SAAWT,GAAMgF,EAAkBhF,EAAEU,OAAOF,OAC5CsH,UAAQ,IAEV1L,IAAAC,cAAA,SAAOgE,QAAQ,kBAAiB,WAChCjE,IAAAC,cAAA,SACEiE,KAAK,OACLR,GAAG,iBACHU,MAAOyE,EACPxE,SAAWT,GAAMkF,EAAiBlF,EAAEU,OAAOF,OAC3CsH,UAAQ,IAGV1L,IAAAC,cAAA,SAAOgE,QAAQ,sBAAqB,eACpCjE,IAAAC,cAAA,SACEiE,KAAK,OACLR,GAAG,qBACHU,MAAO2E,EACP1E,SAAWT,GAAMoF,EAAoBpF,EAAEU,OAAOF,OAC9CsH,UAAQ,IAGV1L,IAAAC,cAAA,SAAOgE,QAAQ,eAAc,QAC7BjE,IAAAC,cAAA,SACEiE,KAAK,OACLR,GAAG,cACHU,MAAO6E,EACP5E,SAAWT,GAAMsF,EAActF,EAAEU,OAAOF,OACxCsH,UAAQ,IAGV1L,IAAAC,cAAA,SAAOgE,QAAQ,kBAAiB,WAChCjE,IAAAC,cAAA,SACEiE,KAAK,OACLR,GAAG,iBACHU,MAAO+E,GACP9E,SAAWT,GAAMwF,GAAiBxF,EAAEU,OAAOF,OAC3CsH,UAAQ,IAEV1L,IAAAC,cAAA,UAAQiE,KAAK,UAAS,aAK3ByC,IACAE,GACkB,kBAAnBV,GACmB,oBAAnBA,EACEnG,IAAAC,cAAA,OAAKE,UAAU,kBACbH,IAAAC,cAAA,UACEE,UAAU,kBACV+D,KAAK,SACLnD,QAASA,IAAM6J,GAAkB,oBAClC,oBAWD,KAEHvE,IACqB,WAAnBF,GAAkD,WAAnBA,IAC9BnG,IAAAC,cAAA,OAAKE,UAAU,SACbH,IAAAC,cAAA,OAAKE,UAAU,iBACbH,IAAAC,cAAA,QAAME,UAAU,QAAQY,QAASqK,IAAkB,QAGnDpL,IAAAC,cAAA,UAAI,gBACJD,IAAAC,cAAA,QAAM0D,SA1SA7E,UAClB8E,EAAEC,iBACFrE,QAAQ0B,IAAI,YAAaqF,GACzB/G,QAAQ0B,IAAI,YAAauF,GACzB,MAAMoF,QAAgB7M,MAAK,qDAAAC,OAC4BsH,EAAQ,KAAAtH,OAAIwH,GACjE,CACEvH,OAAQ,MACRC,QAAS,CACPC,eAAgB,sBAKhB0M,QAAoBD,EAAQvM,OAClC,IAAoB,IAAhBwM,EACF/B,IAAoB,GACpBnD,EAAgBL,GAChB6E,UACK,IAAoB,IAAhBU,EAMT,OALAtF,EAAY,IACZE,EAAY,SACZuD,GACE,qEAoRUjK,IAAAC,cAAA,SAAOgE,QAAQ,YAAW,YAC1BjE,IAAAC,cAAA,SACEiE,KAAK,OACLR,GAAG,WACHU,MAAOmC,EACPlC,SAAWT,GAAM4C,EAAY5C,EAAEU,OAAOF,SAExCpE,IAAAC,cAAA,SAAOgE,QAAQ,YAAW,YAC1BjE,IAAAC,cAAA,SACEiE,KAAK,WACLR,GAAG,WACHU,MAAOqC,EACPpC,SAAWT,IACT8C,EAAY9C,EAAEU,OAAOF,OACrB6F,GAAqB,OAIxBD,IACChK,IAAAC,cAAA,KAAG0L,MAAO,CAAEC,MAAO,QAAU5B,IAsB/BhK,IAAAC,cAAA,UAAQiE,KAAK,UAAS,aAM/BmG,IAAoC,eAAnBlE,GAChBnG,IAAAC,cAAA,OAAKE,UAAU,oBACbH,IAAAC,cAAA,SAAOgE,QAAQ,UAAS,sBACxBjE,IAAAC,cAAA,SACEiE,KAAK,OACLR,GAAG,SACHU,MAAOkF,GACPjF,SAAWT,GAAM2F,GAAU3F,EAAEU,OAAOF,SAGtCpE,IAAAC,cAAA,SAAOgE,QAAQ,YAAW,uBAC1BjE,IAAAC,cAAA,SACEiE,KAAK,OACLR,GAAG,WACHU,MAAOoF,GACPnF,SAAWT,GAAM6F,GAAgB7F,EAAEU,OAAOF,SAE5CpE,IAAAC,cAAA,UAAQc,QAASA,IAzZJjC,WACrB,MAAM+M,QAAgB7M,MAAK,mDAAAC,OAC0BqK,GAAM,KAAArK,OAAIuK,IAC7D,CACEtK,OAAQ,MACRC,QAAS,CACPC,eAAgB,sBAKhB2M,QAAYF,EAAQvM,OAC1B,IAAY,IAARyM,EAAc,CAChBpC,IAAqB,GACrBW,IAAiB,GACjB,MAAMuB,QAAgB7M,MAAK,2DAAAC,OACkCqK,IAC3D,CACEpK,OAAQ,MACRC,QAAS,CACPC,eAAgB,sBAKhB4M,QAAkBH,EAAQvM,OAChCuK,GAAiBmC,GACjBxM,QAAQ0B,IAAI,sBAAuB8K,GACnCxM,QAAQ0B,IAAI,iBAAkB0I,SACb,IAARmC,IACT3F,EAAkB,MAClBmD,GAAU,IACVE,GAAgB,IAChBwC,OAAOC,MACL,kHAuX2BC,IAAkB,UAI5CzC,IACC1J,IAAAC,cAAA,OAAKE,UAAU,oBACZyJ,GAAcwC,OAAS,EACtBpM,IAAAC,cAAA,WACG2J,GAAcyC,IAAI,CAACC,EAAW3M,IAC7BK,IAAAC,cAAA,OAAKa,IAAKnB,GACRK,IAAAC,cAAA,SAAG,SAAOqM,EAAU5G,MACpB1F,IAAAC,cAAA,SAAG,UAAQqM,EAAU3G,WACrB3F,IAAAC,cAAA,SAAG,iBAAeqM,EAAU1G,UAC5B5F,IAAAC,cAAA,SAAG,OAAKqM,EAAUC,eAKxBvM,IAAAC,cAAA,SAAG,kEAORsK,GAAmBI,WAClB3K,IAAAC,cAAA,OACEE,UAAS,gBAAAlB,OACPsL,GAAmBG,UAAY,UAAY,UAG5CH,GAAmBE,SAIJ,kBAAnBtE,GACCnG,IAAAC,cAAA,OAAKE,UAAU,mBACbH,IAAAC,cAAA,SAAOgE,QAAQ,YAAW,wBAC1BjE,IAAAC,cAAA,SACEiE,KAAK,OACLR,GAAG,WACHU,MAAO2C,EACP1C,SAAWT,GAAMoD,EAAYpD,EAAEU,OAAOF,SAExCpE,IAAAC,cAAA,UAAQc,QA1WSjC,UACzB,MAAMC,QAAiBC,MAAK,iDAAAC,OACuB8H,GACjD,CACE7H,OAAQ,MACRC,QAAS,CACPC,eAAgB,sBAOF,UAFML,EAASO,QAGjCkL,GAAsB,CACpBC,QAAO,mCAAAxL,OACLoK,GACI,gFACA,wFAENqB,WAAW,EACXC,WAAW,IAGb6B,WAAW,KACThC,GAAsB,CACpBC,QAAS,GACTC,WAAW,EACXC,WAAW,IAEbvE,EAAkB,OACjB,MAEHoE,GAAsB,CACpBC,QAAS,sDACTC,WAAW,EACXC,WAAW,MAsU8B,iBACrC3K,IAAAC,cAAA,UAAQc,QAASA,IAAMqF,EAAkB,OAAO,YAInDS,GACC7G,IAAAC,cAAA,OAAKE,UAAU,wBACbH,IAAAC,cAAA,UAAI,mBACJD,IAAAC,cAAA,YAQED,IAAAC,cAAA,SAAOgE,QAAQ,eAAc,eAQ7BjE,IAAAC,cAAA,UACEE,UAAU,cACVuD,GAAG,qBACHU,MAAOqD,EACPpD,SAAWT,GAAM8D,EAAgB9D,EAAEU,OAAOF,QAE1CpE,IAAAC,cAAA,UAAQmE,MAAM,IAAG,aAChB8F,GAAkBmC,IAAI,CAACI,EAAa9M,IACnCK,IAAAC,cAAA,UAAQa,IAAKnB,EAAOyE,MAAOqI,GACxBA,KAYPzM,IAAAC,cAAA,UAAQiE,KAAK,SAASnD,QAvaL2L,KAC3BlN,QAAQ0B,IAAI,eAAgBuG,GA7FG3I,WAC/BU,QAAQ0B,IAAIuG,GACZ,MAAMoE,QAAgB7M,MAAK,qEAAAC,OAC4CwI,GACrE,CACEvI,OAAQ,MACRC,QAAS,CACPC,eAAgB,sBAKhBuN,QAA6Bd,EAAQvM,OAC3CsI,EAAoB+E,GACpBnN,QAAQ0B,IAAIyL,IAgFZC,GACA9F,GAA0B,GAC1BgB,GAAoB,KAma2C,UAS1DD,GACC7H,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,mBACH0H,EAAiByE,OAAS,EACzBpM,IAAAC,cAAA,WACG0H,EAAiB0E,IAAI,CAACQ,EAAQlN,IAC7BK,IAAAC,cAAA,OAAKa,IAAKnB,GACRK,IAAAC,cAAA,UAAI,WAAS4M,EAAOC,WACpB9M,IAAAC,cAAA,SAAG,SACM4M,EAAOE,cAAc,IAAEF,EAAOG,iBAAkB,IACtDH,EAAOI,kBAEVjN,IAAAC,cAAA,SAAG,OACI4M,EAAOK,gBAAgB,IAAEL,EAAOM,mBAAoB,IACxDN,EAAOO,oBAEVpN,IAAAC,cAAA,SAAG,cACW4M,EAAOQ,cAAc,MAAI,IACpCR,EAAOS,cAAc,eAAaT,EAAOU,YAAY,MAAI,IACzDV,EAAOW,aAEVxN,IAAAC,cAAA,UACEc,QAASA,KACPiH,EAAgB6E,EAAOC,WAhcdD,KAC7BrN,QAAQ0B,IAAI,mBAAoB2L,GAIhC/E,GAAoB,GACpBZ,GAAqB,IA2bDuG,CAAsBZ,KAEzB,yBAOP7M,IAAAC,cAAA,SAAG,uDAIRgH,IACEJ,GACkB,oBAAnBV,GACEnG,IAAAC,cAAC7B,EAAa,CACZE,aAvYaoP,CAAC7N,EAASC,EAAKC,EAAM4N,KACxCA,IACFzG,GAAqB,GACrBI,GAAiB,IAInBY,EADoC,IAApBH,EAAe,GAAgB,EAANjI,GAAWC,EAAO,KAkYjDxB,SAAUwJ,IAGfV,GACCrH,IAAAC,cAACmB,EAAS,CACRC,kBA5XsBuM,KAC9BtG,GAAiB,GACjBF,GAAe,GACf5H,QAAQ0B,IAAI,oBAAqBmI,KA0XzB/H,aAAcA,KAGjBwI,GACG3C,GACEnH,IAAAC,cAACwB,EAAO,CACNC,gBAAiB2J,GACjB1J,aAAc0H,GACdzH,OAAQqG,EACR1J,SAAUwJ,EACVlG,MAAO0E,IAGXY,GACEnH,IAAAC,cAAC4E,EAAY,CACXnD,gBAAiB2J,GACjB1J,aAAc0H,GACdzH,OAAQqG,EACR1J,SAAUwJ,OCrtBX8F,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAApK,EAAA,GAAAqK,KAAAD,EAAAE,KAAA,UAAqBD,KAAK5P,IAAiD,IAAhD8P,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASlQ,EACpE8P,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH5O,IAAAC,cAACD,IAAM6O,WAAU,KACf7O,IAAAC,cAACiG,EAAG,QAOR2H","file":"static/js/main.051442b0.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./SeatSelection.css\"; // Import the CSS file for styling\r\n\r\nfunction SeatSelection({ onSeatSelect, flightID }) {\r\n  const rows = 3;\r\n  const seatsPerRow = 5;\r\n  const sections = 1; // Number of sections\r\n  const [selectedSeat, setSelectedSeat] = useState(null);\r\n  const [takenSeats, setTakenSeats] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch taken seats from the backend\r\n    const fetchTakenSeats = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:8080/FlightApp/Seat/GetAllTakenOrNot/ByFlightID/${flightID}`,\r\n          {\r\n            method: \"GET\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        const data = await response.json();\r\n        setTakenSeats(data); \r\n      } catch (error) {\r\n        console.error(\"Error fetching taken seats:\", error);\r\n      }\r\n    };\r\n\r\n    fetchTakenSeats();\r\n  }, [flightID]);\r\n\r\n  const isSeatTaken = (index) => {\r\n    return takenSeats[index];\r\n  };\r\n\r\n  const handleSeatClick = (section, row, seat) => {\r\n    const seatIndex = row * seatsPerRow + seat;\r\n\r\n    if (isSeatTaken(seatIndex)) {\r\n      // If the seat is already taken, do not proceed\r\n      return;\r\n    }\r\n\r\n    if (\r\n      selectedSeat &&\r\n      selectedSeat.section === section &&\r\n      selectedSeat.row === row &&\r\n      selectedSeat.seat === seat\r\n    ) {\r\n      setSelectedSeat(null);\r\n      onSeatSelect(null, null, null);\r\n    } else {\r\n      setSelectedSeat({ section, row, seat });\r\n      onSeatSelect(section, row, seat);\r\n    }\r\n  };\r\n\r\n  const handleContinue = () => {\r\n    onSeatSelect(\r\n      selectedSeat.section,\r\n      selectedSeat.row,\r\n      selectedSeat.seat,\r\n      true\r\n    ); // Adding a flag to indicate continuation\r\n    console.log(selectedSeat.row);\r\n    console.log(selectedSeat.seat);\r\n    console.log(flightID);\r\n    const seatIDToSend = (((flightID - 1)*15) + (selectedSeat.row*5) + (selectedSeat.seat + 1));\r\n    console.log(seatIDToSend);\r\n\r\n    fetch(`http://localhost:8080/FlightApp/Seat/SeatTaken/${seatIDToSend}`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n  };\r\n\r\n  const renderSeats = () => {\r\n    const seatMap = [];\r\n    for (let s = 0; s < sections; s++) {\r\n      const sectionRows = [];\r\n      for (let i = 0; i < rows; i++) {\r\n        const row = [];\r\n        for (let j = 0; j < seatsPerRow; j++) {\r\n          const seatNumber = j + 1;\r\n          const isSelected =\r\n            selectedSeat &&\r\n            selectedSeat.section === s &&\r\n            selectedSeat.row === i &&\r\n            selectedSeat.seat === j;\r\n          const seatIndex = i * seatsPerRow + j;\r\n          const isDisabled = isSeatTaken(seatIndex);\r\n\r\n          row.push(\r\n            <button\r\n              key={`seat-${s}-${i}-${j}`}\r\n              onClick={() => handleSeatClick(s, i, j)}\r\n              className={`seat ${isSelected ? \"selected\" : \"\"}`}\r\n              disabled={isDisabled}\r\n            >\r\n              {`S${s + 1}-R${i + 1}-Seat${seatNumber}`}\r\n            </button>\r\n          );\r\n        }\r\n        sectionRows.push(\r\n          <div key={`row-${s}-${i}`} className=\"seat-row\">\r\n            {row}\r\n          </div>\r\n        );\r\n      }\r\n      seatMap.push(\r\n        <div key={`section-${s}`} className=\"section\">\r\n          <h2>Seat Map</h2>\r\n          <div className=\"seat-map\">{sectionRows}</div>\r\n        </div>\r\n      );\r\n    }\r\n    return seatMap;\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <div>\r\n      <p>Pink: Comfort</p>\r\n      <p>Orange: Business</p>\r\n      <p>Grey: Economy</p>\r\n    </div>\r\n    <div className=\"seat-selection\">\r\n      {renderSeats()}\r\n      {selectedSeat && (\r\n        <button className=\"continue-button\" onClick={handleContinue}>\r\n          Continue\r\n        </button>\r\n      )}\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SeatSelection;\r\n","import React from \"react\";\nimport \"./Insurance.css\";\n\nfunction Insurance({ onInsuranceSubmit, setInsurance }) {\n  const handleInsuranceSubmit = () => {\n    onInsuranceSubmit();\n  };\n\n  const chosenInsurance = () => {\n    setInsurance(true);\n    onInsuranceSubmit();\n  };\n\n  return (\n    <div>\n      <div className=\"flex-container\">\n        <div className=\"insurance-container\">\n          <h2>Purchase an Insurance Plan</h2>\n          <h1><b>$50.00</b></h1>\n          <br></br>\n          <div>\n            - Cancel for no additional fees\n            <br></br>- 1 free checked bag\n            <br></br>- Full refund upon cancellation\n            <br></br>\n            <br></br>\n            <button onClick={chosenInsurance}>Select</button>\n          </div>\n        </div>\n      </div>\n      <br></br>\n      <br></br>\n      <button onClick={handleInsuranceSubmit}>Skip Insurance and Pay</button>\n    </div>\n  );\n}\n\nexport default Insurance;\n","import React, { useState, useEffect } from \"react\";\nimport Modal from \"react-modal\";\nimport \"./Payment.css\";\n\nfunction Payment({ onPaymentSubmit, hasInsurance, seatID, flightID, email }) {\n  const [cardNumber, setCardNumber] = useState(\"\");\n  const [expiry, setExpiry] = useState(\"\");\n  const [cvv, setCvv] = useState(\"\");\n  const [isPaymentSuccessful, setPaymentSuccessful] = useState(false);\n  const [seatPrice, setSeatPrice] = useState(0);\n  const [flightPrice, setFlightPrice] = useState(0);\n  const [subtotal, setSubtotal] = useState(0);\n  const [totalAmnt, setTotalAmnt] = useState(0);\n  const [ticketID, setTicketID] = useState(0);\n\n  useEffect(() => {\n    const getPriceDetails = async () => {\n      const recieveSeatPrice = await fetch(\n        `http://localhost:8080/FlightApp/Seat/GetPriceBySeatID/${seatID}`,\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      const gottenSeatPrice = await recieveSeatPrice.json();\n      setSeatPrice(gottenSeatPrice);\n\n      const recieveFlightPrice = await fetch(\n        `http://localhost:8080/FlightApp/Flight/GetFlightPriceUsingFlightID/${flightID}`,\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      const gottenFlightPrice = await recieveFlightPrice.json();\n      setFlightPrice(gottenFlightPrice);\n    };\n\n    getPriceDetails();\n    console.log(email);\n  }, []);\n\n  useEffect(() => {\n    const calculateDiscount = subtotal * 1.05 - subtotal * 1.05 * 0.2;\n    console.log(calculateDiscount);\n    setTotalAmnt(calculateDiscount);\n    console.log(totalAmnt);\n  }, [subtotal]);\n\n  useEffect(() => {\n    calculateSubtotal();\n  }, [seatPrice, flightPrice, hasInsurance]);\n\n  const calculateSubtotal = () => {\n    if (hasInsurance) {\n      setSubtotal(seatPrice + flightPrice + 50);\n    } else {\n      setSubtotal(seatPrice + flightPrice);\n    }\n  };\n\n  const sendCustomerFlightDetails = async () => {\n    const getTicketID = await fetch(\n      `http://localhost:8080/FlightApp/Ticket/Create/${email}/${flightID}/${seatID}/${totalAmnt}/false/${hasInsurance}`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    const gottenTicketID = await getTicketID.json();\n    setTicketID(gottenTicketID);\n    console.log(\"FromBACK: \", gottenTicketID);\n    console.log(\"TicketID: \", ticketID);\n  };\n\n  useEffect(() => {\n    sendPaymentDetails();\n  }, [ticketID]);\n\n  const sendPaymentDetails = () => {\n    fetch(\n      `http://localhost:8080/FlightApp/Payment/Create/${cardNumber}/${expiry}/${cvv}/${totalAmnt}/${ticketID}`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    await sendCustomerFlightDetails();\n    //SEND successive POST's to backend\n    // sendCustomerFlightDetails();\n    setPaymentSuccessful(true);\n  };\n\n  const handlePaymentSuccessClose = () => {\n    setPaymentSuccessful(false);\n    resetAllFields();\n    onPaymentSubmit({ cardNumber, expiry, cvv });\n  };\n\n  const resetAllFields = () => {\n    setCardNumber(\"\");\n    setExpiry(\"\");\n    setCvv(\"\");\n    setPaymentSuccessful(false);\n    setSeatPrice(0);\n    setFlightPrice(0);\n    setSubtotal(0);\n    setTotalAmnt(0);\n    setTicketID(0);\n  };\n\n  return (\n    <div className=\"payment-form\">\n      <h2>Payment Details</h2>\n      <div id=\"priceDetails\">\n        <h3>Payment Amount Breakdown</h3>\n        <div>Seat Price: ${seatPrice}</div>\n        <div>Flight Price: ${flightPrice}</div>\n        {hasInsurance ? (\n          <div>Insurance Price: $50</div>\n        ) : (\n          <div>Insurance Price - Skipped: $0</div>\n        )}\n        <div>Subtotal: ${subtotal}</div>\n        <div>Tax: ${subtotal * 0.05}</div>\n        <div>\n          Since you're a registed member, we are offering you a 20% discount!\n        </div>\n        <div>\n          <b>Total Amount: ${totalAmnt}</b>\n        </div>\n      </div>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"cardNumber\">Card Number</label>\n        <input\n          type=\"text\"\n          id=\"cardNumber\"\n          pattern=\"\\d{16}\"\n          value={cardNumber}\n          onChange={(e) => setCardNumber(e.target.value)}\n        />\n        <div className=\"expiry-fields\">\n          <label htmlFor=\"expiry\">Expiry Year</label>\n          <input\n            type=\"text\"\n            id=\"expiry\"\n            value={expiry}\n            pattern=\"\\d{4}\"\n            onChange={(e) => setExpiry(e.target.value)}\n            maxLength=\"4\" // Limit input to 4 characters\n            placeholder=\"MMYY\"\n          />\n        </div>\n        <label htmlFor=\"cvv\">CVV</label>\n        <input\n          type=\"text\"\n          id=\"cvv\"\n          value={cvv}\n          pattern=\"\\d{3}\"\n          onChange={(e) => setCvv(e.target.value)}\n          maxLength=\"3\" // Limit input to 3 characters\n          placeholder=\"###\"\n        />\n        <button type=\"submit\">Submit Payment</button>\n      </form>\n      <Modal\n        isOpen={isPaymentSuccessful}\n        onRequestClose={handlePaymentSuccessClose}\n        contentLabel=\"Payment Success Modal\"\n      >\n        <div>\n          <h2>Payment Successful!</h2>\n          <p>Check your email for your ticket and receipt.</p>\n          <button onClick={handlePaymentSuccessClose}>OK!</button>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n\nexport default Payment;\n","import React, { useState, useEffect } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport \"./Payment.css\";\r\n\r\nfunction GuestPayment({ onPaymentSubmit, hasInsurance, seatID, flightID }) {\r\n  const [cardNumber, setCardNumber] = useState(\"\");\r\n  const [expiry, setExpiry] = useState(\"\");\r\n  const [cvv, setCvv] = useState(\"\");\r\n  const [isPaymentSuccessful, setPaymentSuccessful] = useState(false);\r\n  const [seatPrice, setSeatPrice] = useState(0);\r\n  const [flightPrice, setFlightPrice] = useState(0);\r\n  const [subtotal, setSubtotal] = useState(0);\r\n  const [totalAmnt, setTotalAmnt] = useState(0);\r\n  const [ticketID, setTicketID] = useState(0);\r\n  const [passengerName, setPassengerName] = useState(\"\");\r\n  const [passengerEmail, setPassengerEmail] = useState(\"\");\r\n  const [passengerPhone, setPassengerPhone] = useState(\"\");\r\n  const [isEmailValid, setIsEmailValid] = useState(true);\r\n\r\n  const validateEmail = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const handleEmailChange = (e) => {\r\n    const enteredEmail = e.target.value;\r\n    setPassengerEmail(enteredEmail);\r\n    setIsEmailValid(validateEmail(enteredEmail));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getPriceDetails = async () => {\r\n      const recieveSeatPrice = await fetch(\r\n        `http://localhost:8080/FlightApp/Seat/GetPriceBySeatID/${seatID}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      const gottenSeatPrice = await recieveSeatPrice.json();\r\n      setSeatPrice(gottenSeatPrice);\r\n\r\n      const recieveFlightPrice = await fetch(\r\n        `http://localhost:8080/FlightApp/Flight/GetFlightPriceUsingFlightID/${flightID}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      const gottenFlightPrice = await recieveFlightPrice.json();\r\n      setFlightPrice(gottenFlightPrice);\r\n    };\r\n\r\n    getPriceDetails();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const calculateAmount = subtotal * 1.05;\r\n    console.log(calculateAmount);\r\n    setTotalAmnt(calculateAmount);\r\n    console.log(totalAmnt);\r\n  }, [subtotal]);\r\n\r\n  useEffect(() => {\r\n    calculateSubtotal();\r\n  }, [seatPrice, flightPrice, hasInsurance]);\r\n\r\n  const calculateSubtotal = () => {\r\n    if (hasInsurance) {\r\n      setSubtotal(seatPrice + flightPrice + 50);\r\n    } else {\r\n      setSubtotal(seatPrice + flightPrice);\r\n    }\r\n  };\r\n\r\n  const sendPassengerInfo = async () => {\r\n    const response = await fetch(\r\n      \"http://localhost:8080/FlightApp/Customer/Guest/Create\",\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          name: passengerName,\r\n          emailAddr: passengerEmail,\r\n          phoneNum: passengerPhone,\r\n          customerPassword: null,\r\n        }),\r\n      }\r\n    );\r\n\r\n    // const result = await response.json();\r\n    // console.log(\"Customer Creation Return:\", result);\r\n  };\r\n\r\n  const sendCustomerFlightDetails = async () => {\r\n    await sendPassengerInfo();\r\n\r\n    const getTicketID = await fetch(\r\n      `http://localhost:8080/FlightApp/Ticket/Create/${passengerEmail}/${flightID}/${seatID}/${totalAmnt}/false/${hasInsurance}`,\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    const gottenTicketID = await getTicketID.json();\r\n    setTicketID(gottenTicketID);\r\n    console.log(\"FromBACK: \", gottenTicketID);\r\n    console.log(\"TicketID: \", ticketID);\r\n  };\r\n\r\n  useEffect(() => {\r\n    sendPaymentDetails();\r\n  }, [ticketID]);\r\n\r\n  const sendPaymentDetails = () => {\r\n    fetch(\r\n      `http://localhost:8080/FlightApp/Payment/Create/${cardNumber}/${expiry}/${cvv}/${totalAmnt}/${ticketID}`,\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await sendCustomerFlightDetails();\r\n    //SEND successive POST's to backend\r\n    // sendCustomerFlightDetails();\r\n    setPaymentSuccessful(true);\r\n  };\r\n\r\n  const handlePaymentSuccessClose = () => {\r\n    setPaymentSuccessful(false);\r\n    resetAllFields();\r\n    onPaymentSubmit({ cardNumber, expiry, cvv });\r\n  };\r\n\r\n  const resetAllFields = () => {\r\n    setCardNumber(\"\");\r\n    setExpiry(\"\");\r\n    setCvv(\"\");\r\n    setPaymentSuccessful(false);\r\n    setSeatPrice(0);\r\n    setFlightPrice(0);\r\n    setSubtotal(0);\r\n    setTotalAmnt(0);\r\n    setTicketID(0);\r\n    setPassengerName(\"\");\r\n    setPassengerEmail(\"\");\r\n    setPassengerPhone(\"\");\r\n    setIsEmailValid(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"payment-form\">\r\n      <h2>Payment Details</h2>\r\n      <div id=\"priceDetails\">\r\n        <h3>Payment Amount Breakdown</h3>\r\n        <div>Seat Price: ${seatPrice}</div>\r\n        <div>Flight Price: ${flightPrice}</div>\r\n        {hasInsurance ? (\r\n          <div>Insurance Price: $50</div>\r\n        ) : (\r\n          <div>Insurance Price - Skipped: $0</div>\r\n        )}\r\n        <div>Subtotal: ${subtotal}</div>\r\n        <div>Tax: ${subtotal * 0.05}</div>\r\n        <div>\r\n          <b>Total Amount: ${totalAmnt}</b>\r\n        </div>\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"passengerName\">Passenger Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"passengerName\"\r\n          value={passengerName}\r\n          onChange={(e) => setPassengerName(e.target.value)}\r\n        />\r\n\r\n        <label htmlFor=\"passengerEmail\">Passenger Email</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"passengerEmail\"\r\n          value={passengerEmail}\r\n          onChange={handleEmailChange}\r\n        />\r\n        {!isEmailValid && (\r\n          <p className=\"error-message\">Please enter a valid email address.</p>\r\n        )}\r\n\r\n        <label htmlFor=\"passengerPhone\">Passenger Phone</label>\r\n        <input\r\n          type=\"tel\"\r\n          id=\"passengerPhone\"\r\n          value={passengerPhone}\r\n          onChange={(e) => setPassengerPhone(e.target.value)}\r\n        />\r\n\r\n        <label htmlFor=\"cardNumber\">Card Number</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"cardNumber\"\r\n          pattern=\"\\d{16}\"\r\n          value={cardNumber}\r\n          onChange={(e) => setCardNumber(e.target.value)}\r\n        />\r\n        <div className=\"expiry-fields\">\r\n          <label htmlFor=\"expiry\">Expiry Year</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"expiry\"\r\n            value={expiry}\r\n            pattern=\"\\d{4}\"\r\n            onChange={(e) => setExpiry(e.target.value)}\r\n            maxLength=\"4\" // Limit input to 4 characters\r\n            placeholder=\"MMYY\"\r\n          />\r\n        </div>\r\n        <label htmlFor=\"cvv\">CVV</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"cvv\"\r\n          value={cvv}\r\n          pattern=\"\\d{3}\"\r\n          onChange={(e) => setCvv(e.target.value)}\r\n          maxLength=\"3\" // Limit input to 3 characters\r\n          placeholder=\"###\"\r\n        />\r\n        <button type=\"submit\">Submit Payment</button>\r\n      </form>\r\n      <Modal\r\n        isOpen={isPaymentSuccessful}\r\n        onRequestClose={handlePaymentSuccessClose}\r\n        contentLabel=\"Payment Success Modal\"\r\n      >\r\n        <div>\r\n          <h2>Payment Successful!</h2>\r\n          <p>Check your email for your ticket and receipt.</p>\r\n          <button onClick={handlePaymentSuccessClose}>OK!</button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GuestPayment;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport SeatSelection from \"./SeatSelection\";\nimport Insurance from \"./Insurance\";\nimport Payment from \"./Payment\";\nimport GuestPayment from \"./GuestPayment\";\n\nfunction App() {\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const [showTicketPurchaseForm, setShowTicketPurchaseForm] = useState(false);\n  //const [departureDate, setDepartureDate] = useState(\"\");\n  //const [destination, setDestination] = useState(\"\");\n  //const [origin, setOrigin] = useState(\"\");\n  const [ticketId, setTicketId] = useState(\"\");\n  //const [role, setRole] = useState(\"\"); // State to store the selected role\n  const [showSeatSelection, setShowSeatSelection] = useState(false);\n  const [showPayment, setShowPayment] = useState(false);\n  const [showInsurance, setShowInsurance] = useState(false);\n  const [destOptions, setDestOptions] = useState([]);\n  const [selectedDest, setSelectedDest] = useState(\"\");\n  const [availableFlights, setAvailableFlights] = useState([]);\n  const [showSearchFlight, setShowSearchFlight] = useState(false);\n  const [sendFlightID, setSendFlightID] = useState(0);\n  const [sendSeatID, setSendSeatID] = useState(0);\n  const [signupUsername, setSignupUsername] = useState(\"\");\n  const [signupEmail, setSignupEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [signupPhone, setSignupPhone] = useState(\"\");\n  const [signupPassword, setSignupPassword] = useState(\"\");\n  const [signupAddress, setSignupAddress] = useState(\"\");\n  const [signupPostalCode, setSignupPostalCode] = useState(\"\");\n  const [signupCity, setSignupCity] = useState(\"\");\n  const [signupCountry, setSignupCountry] = useState(\"\");\n  const [insurance, setInsurance] = useState(false);\n  const [crewID, setCrewID] = useState(\"\");\n  const [crewPassword, setCrewPassword] = useState(\"\");\n  const [showPassnegerList, setShowPassengerList] = useState(false);\n  const [passengerList, setPassengerList] = useState([]);\n  const [isRegisteredUser, setIsRegisteredUser] = useState(false);\n  const [loginAttemptError, setLoginAttemptError] = useState(\"\");\n  const uniqueDestOptions = [...new Set(destOptions)];\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  const [showCrewLogin, setShowCrewLogin] = useState(false);\n  const [cancelNotification, setCancelNotification] = useState({\n    message: \"\",\n    isSuccess: false,\n    isVisible: false,\n  });\n\n  const handleButtonClick = (option) => {\n    const lowerCaseOption = option.toLowerCase();\n    setSelectedOption(lowerCaseOption);\n    if (lowerCaseOption === \"member\") {\n      setShowModal(true);\n      setShowTicketPurchaseForm(false);\n    } else if (lowerCaseOption === \"guest\") {\n      // Directly show ticket purchase options for guests\n      setShowTicketPurchaseForm(true);\n      setShowModal(false);\n      setSelectedOption(\"purchase ticket\"); // Ensure this is set for guests\n    } else if (lowerCaseOption === \"purchase ticket\") {\n      setShowTicketPurchaseForm(true);\n      setShowModal(false);\n    } else if (lowerCaseOption === \"cancel ticket\") {\n      setShowTicketPurchaseForm(false);\n      setShowModal(false);\n      setSelectedOption(lowerCaseOption);\n    } else if (lowerCaseOption === \"third option\") {\n      setSelectedOption(\"signup\");\n    } else if (lowerCaseOption === \"crew view\") {\n      setShowModal(false);\n      setSelectedOption(\"crew login\");\n      setShowCrewLogin(true);\n    }\n\n    getAllDestinations();\n  };\n\n  const handleSignup = (e) => {\n    e.preventDefault();\n\n    if (!emailRegex.test(signupEmail)) {\n      setEmailError(\"Please enter a valid email address.\");\n      return;\n    }\n\n    const signupData = {\n      name: signupUsername,\n      emailAddr: signupEmail,\n      phoneNum: signupPhone,\n      customerPassword: signupPassword,\n    };\n    console.log(\"Signup Data:\", signupData);\n\n    fetch(\n      `http://localhost:8080/FlightApp/Customer/Create/${signupAddress}/${signupPostalCode}/${signupCity}/${signupCountry}`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(signupData),\n      }\n    );\n\n    setSignupUsername(\"\");\n    setSignupEmail(\"\");\n    setSignupPhone(\"\");\n    setSignupPassword(\"\");\n    setSignupAddress(\"\");\n    setSignupPostalCode(\"\");\n    setSignupCity(\"\");\n    setSignupCountry(\"\");\n\n    // ***HOW DO WE REDIRECT TO FRONT PAGE *** //\n    setSelectedOption(null); // Assuming this clears the signup form and displays initial options\n  };\n\n  useEffect(() => {\n    getAllDestinations();\n  }, []);\n\n  const getAllDestinations = async () => {\n    try {\n      const response = await fetch(\n        `http://localhost:8080/FlightApp/Flight/GetAllDestinations`,\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const destList = await response.json();\n      setDestOptions(destList); // Update state here\n    } catch (error) {\n      console.error(\"There was a problem with the fetch operation:\", error);\n    }\n  };\n\n  const getAllFlightsForLocation = async () => {\n    console.log(selectedDest);\n    const recieve = await fetch(\n      `http://localhost:8080/FlightApp/Flight/GetAllFlightsByDestination/${selectedDest}`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    const allFlightsOfLocation = await recieve.json();\n    setAvailableFlights(allFlightsOfLocation);\n    console.log(allFlightsOfLocation);\n  };\n\n  const checkCrewLogin = async () => {\n    const recieve = await fetch(\n      `http://localhost:8080/FlightApp/Crew/Validation/${crewID}/${crewPassword}`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    const res = await recieve.json();\n    if (res === true) {\n      setShowPassengerList(true);\n      setShowCrewLogin(false);\n      const recieve = await fetch(\n        `http://localhost:8080/FlightApp/Flight/GetPassengerList/${crewID}`,\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      const customers = await recieve.json();\n      setPassengerList(customers);\n      console.log(\"Returned Customers:\", customers);\n      console.log(\"Set Customers:\", passengerList);\n    } else if (res === false) {\n      setSelectedOption(null);\n      setCrewID(\"\");\n      setCrewPassword(\"\");\n      window.alert(\n        \"You have attempted to access confidential information without proper authentication credentials. Page exited\"\n      );\n    }\n  };\n\n  const handleModalClose = () => {\n    setShowModal(false);\n    //setUsername(\"\");\n    setPassword(\"\");\n    //setRole(\"\"); // Reset the role when the modal is closed\n  };\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    console.log(\"Username:\", username);\n    console.log(\"Password:\", password);\n    const recieve = await fetch(\n      `http://localhost:8080/FlightApp/Customer/Validate/${username}/${password}`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    const validateAcc = await recieve.json();\n    if (validateAcc === true) {\n      setIsRegisteredUser(true);\n      setLoggedInUser(username);\n      handleModalClose();\n    } else if (validateAcc === false) {\n      setUsername(\"\");\n      setPassword(\"\");\n      setLoginAttemptError(\n        \"The given userrname or password is incorrect. Please try again.\"\n      );\n      return;\n    }\n  };\n\n  const handleTicketPurchase = () => {\n    console.log(\"Destination:\", selectedDest);\n    getAllFlightsForLocation(); // Fetch and set available flights\n    setShowTicketPurchaseForm(false);\n    setShowSearchFlight(true); // Show the flight search UI\n  };\n\n  const handleFlightSelection = (flight) => {\n    console.log(\"Selected flight:\", flight);\n    // console.log(\"CHECK:\", sendFlightID);\n    // Implement what happens after a flight is selected, e.g., storing flight data\n    // and transitioning to the seat selection phase\n    setShowSearchFlight(false);\n    setShowSeatSelection(true);\n  };\n\n  const handleCancelTicket = async () => {\n    const response = await fetch(\n      `http://localhost:8080/FlightApp/Ticket/Cancel/${ticketId}`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    const apiResponse = await response.json();\n\n    if (apiResponse === 1) {\n      setCancelNotification({\n        message: `Ticket cancellation successful! ${\n          insurance\n            ? \"You purchased ticket cancellation insurance, thus you will get a full refund!\"\n            : \"You did not purchase ticket cancellation insurance, thus you will get a half refund.\"\n        }`,\n        isSuccess: true,\n        isVisible: true,\n      });\n\n      setTimeout(() => {\n        setCancelNotification({\n          message: \"\",\n          isSuccess: false,\n          isVisible: false,\n        });\n        setSelectedOption(null); // Navigate back to the home page\n      }, 4000);\n    } else {\n      setCancelNotification({\n        message: \"Ticket cancellation unsuccessful. Please try again.\",\n        isSuccess: false,\n        isVisible: true,\n      });\n    }\n  };\n\n  const handleLogout = () => {\n    // Clear necessary states and reset them to default values\n    setLoggedInUser(null);\n    setSelectedOption(null);\n    setShowModal(false);\n    setUsername(\"\");\n    setPassword(\"\");\n    setShowTicketPurchaseForm(false);\n    setSelectedDest(\"\");\n    setSendFlightID(0);\n    setSendSeatID(0);\n    setInsurance(false);\n    setShowSeatSelection(false);\n    setShowPayment(false);\n    setShowInsurance(false);\n    setShowSearchFlight(false);\n    setShowCrewLogin(false); // Ensure crew login form is hidden\n    setIsRegisteredUser(false);\n    setCancelNotification({\n      message: \"\",\n      isSuccess: false,\n      isVisible: false,\n    });\n  };\n\n  const handleSeatSelect = (section, row, seat, continueToInsurance) => {\n    if (continueToInsurance) {\n      setShowSeatSelection(false);\n      setShowInsurance(true);\n    }\n\n    const seatID = (sendFlightID - 1) * 15 + row * 5 + (seat + 1);\n    setSendSeatID(seatID);\n  };\n\n  const handlePaymentSubmit = (paymentDetails) => {\n    console.log(\"Payment Details:\", paymentDetails);\n    // Handle the payment submission logic here\n    setShowPayment(false);\n    setSelectedOption(null);\n  };\n\n  const handleInsuranceContinue = () => {\n    setShowInsurance(false);\n    setShowPayment(true);\n    console.log(\"AFTER INS CHOSEN:\", insurance);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <h2 className=\"title\">Flight Booker</h2>\n        {loggedInUser && (\n          <div className=\"user-info\">\n            <span>Logged in as {loggedInUser}</span>\n            <button onClick={handleLogout}>Log out</button>\n          </div>\n        )}\n      </div>\n      <div className=\"main text-center mt-5\">\n        {!loggedInUser && selectedOption === null && (\n          <div className=\"d-grid gap-2 col-6 mx-auto\">\n            <h4>Continue As</h4>\n            <button\n              className=\"btn btn-primary\"\n              type=\"button\"\n              onClick={() => handleButtonClick(\"member\")}\n            >\n              Member\n            </button>\n            <button\n              className=\"btn btn-primary\"\n              type=\"button\"\n              onClick={() => handleButtonClick(\"guest\")}\n            >\n              Guest\n            </button>\n            <button\n              className=\"btn btn-primary\"\n              type=\"button\"\n              onClick={() => handleButtonClick(\"cancel ticket\")}\n            >\n              Cancel Ticket\n            </button>\n            <button\n              className=\"btn btn-primary\"\n              type=\"button\"\n              onClick={() => handleButtonClick(\"crew view\")}\n            >\n              Crew Login\n            </button>\n            <a\n              href=\"#\"\n              className=\"underlined-text\"\n              onClick={() => handleButtonClick(\"Third Option\")}\n            >\n              Don't have an account? Sign up here\n            </a>\n          </div>\n        )}\n\n        {selectedOption === \"signup\" && (\n          <div className=\"signup-form\">\n            <h2>Sign Up</h2>\n            <form onSubmit={handleSignup}>\n              <label htmlFor=\"signup-username\">First and Last Name</label>\n              <input\n                type=\"text\"\n                id=\"signup-username\"\n                value={signupUsername}\n                onChange={(e) => setSignupUsername(e.target.value)}\n                required\n              />\n              <label htmlFor=\"signup-email\">Email</label>\n              <input\n                type=\"email\"\n                id=\"signup-email\"\n                value={signupEmail}\n                onChange={(e) => {\n                  setSignupEmail(e.target.value);\n                  setEmailError(\"\"); // Clear email error on input change\n                }}\n                required\n              />\n              {emailError && <p style={{ color: \"red\" }}>{emailError}</p>}\n\n              <label htmlFor=\"signup-phone\">Phone Number</label>\n              <input\n                type=\"tel\"\n                id=\"signup-phone\"\n                value={signupPhone}\n                onChange={(e) => setSignupPhone(e.target.value)}\n                required\n              />\n              <label htmlFor=\"signup-password\">Password</label>\n              <input\n                type=\"password\"\n                id=\"signup-password\"\n                value={signupPassword}\n                onChange={(e) => setSignupPassword(e.target.value)}\n                required\n              />\n              <label htmlFor=\"signup-address\">Address</label>\n              <input\n                type=\"text\"\n                id=\"signup-address\"\n                value={signupAddress}\n                onChange={(e) => setSignupAddress(e.target.value)}\n                required\n              />\n\n              <label htmlFor=\"signup-postal-code\">Postal Code</label>\n              <input\n                type=\"text\"\n                id=\"signup-postal-code\"\n                value={signupPostalCode}\n                onChange={(e) => setSignupPostalCode(e.target.value)}\n                required\n              />\n\n              <label htmlFor=\"signup-city\">City</label>\n              <input\n                type=\"text\"\n                id=\"signup-city\"\n                value={signupCity}\n                onChange={(e) => setSignupCity(e.target.value)}\n                required\n              />\n\n              <label htmlFor=\"signup-country\">Country</label>\n              <input\n                type=\"text\"\n                id=\"signup-country\"\n                value={signupCountry}\n                onChange={(e) => setSignupCountry(e.target.value)}\n                required\n              />\n              <button type=\"submit\">Sign Up</button>\n            </form>\n          </div>\n        )}\n\n        {loggedInUser &&\n        !showTicketPurchaseForm &&\n        selectedOption !== \"cancel ticket\" &&\n        selectedOption !== \"purchase ticket\" ? (\n          <div className=\"ticket-options\">\n            <button\n              className=\"btn btn-primary\"\n              type=\"button\"\n              onClick={() => handleButtonClick(\"purchase ticket\")}\n            >\n              Purchase Ticket\n            </button>\n            {/* <button\n              className=\"btn btn-secondary\"\n              type=\"button\"\n              onClick={() => handleButtonClick(\"cancel ticket\")}\n            >\n              Cancel Ticket\n            </button> */}\n          </div>\n        ) : null}\n\n        {showModal &&\n          (selectedOption === \"member\" || selectedOption === \"Member\") && (\n            <div className=\"modal\">\n              <div className=\"modal-content\">\n                <span className=\"close\" onClick={handleModalClose}>\n                  &times;\n                </span>\n                <h2>Member Login</h2>\n                <form onSubmit={handleLogin}>\n                  <label htmlFor=\"username\">Username</label>\n                  <input\n                    type=\"text\"\n                    id=\"username\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                  />\n                  <label htmlFor=\"password\">Password</label>\n                  <input\n                    type=\"password\"\n                    id=\"password\"\n                    value={password}\n                    onChange={(e) => {\n                      setPassword(e.target.value);\n                      setLoginAttemptError(\"\");\n                    }}\n                  />\n\n                  {loginAttemptError && (\n                    <p style={{ color: \"red\" }}>{loginAttemptError}</p>\n                  )}\n                  {/* <div className=\"input-group mb-3\">\n                    <label\n                      className=\"input-group-text\"\n                      htmlFor=\"inputGroupSelect01\"\n                    >\n                      Login as\n                    </label>\n                    <select\n                      className=\"form-select\"\n                      id=\"inputGroupSelect01\"\n                      onChange={(e) => setRole(e.target.value)} // Set the role value\n                    >\n                      <option selected>Choose...</option>\n                      <option value=\"Customer\">Customer</option>\n                      <option value=\"Travel Agent\">Travel Agent</option>\n                      <option value=\"Crew\">Crew</option>\n                      <option value=\"System Admin\">System Admin</option>\n                    </select>\n                  </div> */}\n\n                  <button type=\"submit\">Log In</button>\n                </form>\n              </div>\n            </div>\n          )}\n\n        {showCrewLogin && selectedOption === \"crew login\" && (\n          <div className=\"crew-login-input\">\n            <label htmlFor=\"crewId\">Enter your Crew ID</label>\n            <input\n              type=\"text\"\n              id=\"crewId\"\n              value={crewID}\n              onChange={(e) => setCrewID(e.target.value)}\n            />\n\n            <label htmlFor=\"crewPass\">Enter your Password</label>\n            <input\n              type=\"text\"\n              id=\"crewPass\"\n              value={crewPassword}\n              onChange={(e) => setCrewPassword(e.target.value)}\n            />\n            <button onClick={() => checkCrewLogin()}>Login</button>\n          </div>\n        )}\n\n        {showPassnegerList && (\n          <div className=\"crew-login-input\">\n            {passengerList.length > 0 ? (\n              <div>\n                {passengerList.map((passenger, index) => (\n                  <div key={index}>\n                    <p>Name: {passenger.name}</p>\n                    <p>Email: {passenger.emailAddr}</p>\n                    <p>Phone Number: {passenger.phoneNum}</p>\n                    <p>ID: {passenger.customerID}</p>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <p>\n                No passengers have currently booked a ticket for your flight.\n              </p>\n            )}\n          </div>\n        )}\n\n        {cancelNotification.isVisible && (\n          <div\n            className={`notification ${\n              cancelNotification.isSuccess ? \"success\" : \"error\"\n            }`}\n          >\n            {cancelNotification.message}\n          </div>\n        )}\n\n        {selectedOption === \"cancel ticket\" && (\n          <div className=\"ticket-id-input\">\n            <label htmlFor=\"ticketId\">Enter your ticket ID</label>\n            <input\n              type=\"text\"\n              id=\"ticketId\"\n              value={ticketId}\n              onChange={(e) => setTicketId(e.target.value)}\n            />\n            <button onClick={handleCancelTicket}>Cancel Ticket</button>\n            <button onClick={() => setSelectedOption(null)}>Go back</button>\n          </div>\n        )}\n\n        {showTicketPurchaseForm && (\n          <div className=\"ticket-purchase-form\">\n            <h4>Purchase Ticket</h4>\n            <form>\n              {/* <label htmlFor=\"departureDate\">Departure Date</label>\n              <input\n                type=\"date\"\n                id=\"departureDate\"\n                value={departureDate}\n                onChange={(e) => setDepartureDate(e.target.value)}\n              /> */}\n              <label htmlFor=\"destination\">Destination</label>\n              {/* {<input\n                type=\"text\"\n                id=\"destination\"\n                value={destination}\n                onChange={(e) => setDestination(e.target.value)}\n              />} */}\n\n              <select\n                className=\"form-select\"\n                id=\"inputGroupSelect01\"\n                value={selectedDest}\n                onChange={(e) => setSelectedDest(e.target.value)}\n              >\n                <option value=\"\">Choose...</option>\n                {uniqueDestOptions.map((destination, index) => (\n                  <option key={index} value={destination}>\n                    {destination}\n                  </option>\n                ))}\n              </select>\n\n              {/* <label htmlFor=\"origin\">Origin</label>\n              <input\n                type=\"text\"\n                id=\"origin\"\n                value={origin}\n                onChange={(e) => setOrigin(e.target.value)}\n              /> */}\n              <button type=\"button\" onClick={handleTicketPurchase}>\n                Next\n              </button>\n            </form>\n          </div>\n        )}\n        {/* {!showTicketPurchaseForm && selectedOption === \"purchase ticket\" && (\n          <SeatSelection onSeatSelect={handleSeatSelect} />\n        )} */}\n        {showSearchFlight && (\n          <div>\n            <h2>Select a Flight</h2>\n            {availableFlights.length > 0 ? (\n              <div>\n                {availableFlights.map((flight, index) => (\n                  <div key={index}>\n                    <h3>Flight: {flight.flight_id}</h3>\n                    <p>\n                      From: {flight.departureCity} {flight.departureCountry}{\" \"}\n                      {flight.departureAirport}\n                    </p>\n                    <p>\n                      To: {flight.destinationCity} {flight.destinationCountry}{\" \"}\n                      {flight.destinationAirport}\n                    </p>\n                    <p>\n                      Departure: {flight.departureDate} at{\" \"}\n                      {flight.departureTime} - Arrival: {flight.arrivalDate} at{\" \"}\n                      {flight.arrivalTime}\n                    </p>\n                    <button\n                      onClick={() => {\n                        setSendFlightID(flight.flight_id);\n                        handleFlightSelection(flight);\n                      }}\n                    >\n                      Select this Flight\n                    </button>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <p>No flights available for the selected destination.</p>\n            )}\n          </div>\n        )}\n        {showSeatSelection &&\n          !showTicketPurchaseForm &&\n          selectedOption === \"purchase ticket\" && (\n            <SeatSelection\n              onSeatSelect={handleSeatSelect}\n              flightID={sendFlightID}\n            />\n          )}\n        {showInsurance && (\n          <Insurance\n            onInsuranceSubmit={handleInsuranceContinue}\n            setInsurance={setInsurance}\n          />\n        )}\n        {isRegisteredUser\n          ? showPayment && (\n              <Payment\n                onPaymentSubmit={handlePaymentSubmit}\n                hasInsurance={insurance}\n                seatID={sendSeatID}\n                flightID={sendFlightID}\n                email={username}\n              />\n            )\n          : showPayment && (\n              <GuestPayment\n                onPaymentSubmit={handlePaymentSubmit}\n                hasInsurance={insurance}\n                seatID={sendSeatID}\n                flightID={sendFlightID}\n              />\n            )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}