{"version":3,"sources":["SeatSelection.js","Insurance.js","Payment.js","GuestPayment.js","App.js","reportWebVitals.js","index.js"],"names":["SeatSelection","_ref","onSeatSelect","flightID","selectedSeat","setSelectedSeat","useState","takenSeats","setTakenSeats","useEffect","async","response","fetch","concat","method","headers","Content-Type","data","json","error","console","fetchTakenSeats","isSeatTaken","index","handleSeatClick","section","row","seat","React","createElement","Fragment","className","renderSeats","seatMap","s","sectionRows","i","j","seatNumber","isSelected","isDisabled","push","key","onClick","disabled","handleContinue","log","seatIDToSend","Insurance","onInsuranceSubmit","setInsurance","chosenInsurance","handleInsuranceSubmit","Payment","onPaymentSubmit","hasInsurance","seatID","email","cardNumber","setCardNumber","expiry","setExpiry","cvv","setCvv","isPaymentSuccessful","setPaymentSuccessful","seatPrice","setSeatPrice","flightPrice","setFlightPrice","subtotal","setSubtotal","totalAmnt","setTotalAmnt","ticketID","setTicketID","formattedNumber","recieveSeatPrice","gottenSeatPrice","recieveFlightPrice","gottenFlightPrice","getPriceDetails","calculateDiscount","parseFloat","toFixed","toString","calculateSubtotal","sendPaymentDetails","handlePaymentSuccessClose","resetAllFields","id","onSubmit","handleSubmit","getTicketID","gottenTicketID","sendCustomerFlightDetails","htmlFor","type","pattern","value","onChange","e","target","maxLength","placeholder","Modal","isOpen","onRequestClose","contentLabel","GuestPayment","calculateAmount","App","selectedOption","setSelectedOption","showModal","setShowModal","username","setUsername","password","setPassword","loggedInUser","setLoggedInUser","showTicketPurchaseForm","setShowTicketPurchaseForm","ticketId","setTicketId","showSeatSelection","setShowSeatSelection","showPayment","setShowPayment","showInsurance","setShowInsurance","destOptions","setDestOptions","selectedDest","setSelectedDest","availableFlights","setAvailableFlights","showSearchFlight","setShowSearchFlight","sendFlightID","setSendFlightID","sendSeatID","setSendSeatID","signupUsername","setSignupUsername","signupEmail","setSignupEmail","emailError","setEmailError","signupPhone","setSignupPhone","signupPassword","setSignupPassword","signupAddress","setSignupAddress","signupPostalCode","setSignupPostalCode","signupCity","setSignupCity","signupCountry","setSignupCountry","insurance","crewID","setCrewID","crewPassword","setCrewPassword","showPassnegerList","setShowPassengerList","passengerList","setPassengerList","isRegisteredUser","setIsRegisteredUser","loginAttemptError","setLoginAttemptError","uniqueDestOptions","Set","emailRegex","showCrewLogin","setShowCrewLogin","handleButtonClick","option","lowerCaseOption","toLowerCase","getAllDestinations","ok","Error","destList","handleModalClose","handlePaymentSubmit","paymentDetails","handleLogout","href","preventDefault","test","signupData","name","emailAddr","phoneNum","customerPassword","body","JSON","stringify","required","style","color","recieve","validateAcc","res","customers","window","alert","checkCrewLogin","length","map","passenger","customerID","destination","handleTicketPurchase","allFlightsOfLocation","getAllFlightsForLocation","flight","flight_id","departureCity","departureCountry","departureAirport","destinationCity","destinationCountry","destinationAirport","departureDate","departureTime","arrivalDate","arrivalTime","handleFlightSelection","handleSeatSelect","continueToInsurance","handleInsuranceContinue","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.05888046.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./SeatSelection.css\"; // Import the CSS file for styling\r\n\r\nfunction SeatSelection({ onSeatSelect, flightID }) {\r\n  const rows = 3;\r\n  const seatsPerRow = 5;\r\n  const sections = 1; // Number of sections\r\n  const [selectedSeat, setSelectedSeat] = useState(null);\r\n  const [takenSeats, setTakenSeats] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch taken seats from the backend\r\n    const fetchTakenSeats = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:8080/FlightApp/Seat/GetAllTakenOrNot/ByFlightID/${flightID}`,\r\n          {\r\n            method: \"GET\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        const data = await response.json();\r\n        setTakenSeats(data); \r\n      } catch (error) {\r\n        console.error(\"Error fetching taken seats:\", error);\r\n      }\r\n    };\r\n\r\n    fetchTakenSeats();\r\n  }, [flightID]);\r\n\r\n  const isSeatTaken = (index) => {\r\n    return takenSeats[index];\r\n  };\r\n\r\n  const handleSeatClick = (section, row, seat) => {\r\n    const seatIndex = row * seatsPerRow + seat;\r\n\r\n    if (isSeatTaken(seatIndex)) {\r\n      // If the seat is already taken, do not proceed\r\n      return;\r\n    }\r\n\r\n    if (\r\n      selectedSeat &&\r\n      selectedSeat.section === section &&\r\n      selectedSeat.row === row &&\r\n      selectedSeat.seat === seat\r\n    ) {\r\n      setSelectedSeat(null);\r\n      onSeatSelect(null, null, null);\r\n    } else {\r\n      setSelectedSeat({ section, row, seat });\r\n      onSeatSelect(section, row, seat);\r\n    }\r\n  };\r\n\r\n  const handleContinue = () => {\r\n    onSeatSelect(\r\n      selectedSeat.section,\r\n      selectedSeat.row,\r\n      selectedSeat.seat,\r\n      true\r\n    ); // Adding a flag to indicate continuation\r\n    console.log(selectedSeat.row);\r\n    console.log(selectedSeat.seat);\r\n    console.log(flightID);\r\n    const seatIDToSend = (((flightID - 1)*15) + (selectedSeat.row*5) + (selectedSeat.seat + 1));\r\n    console.log(seatIDToSend);\r\n\r\n    fetch(`http://localhost:8080/FlightApp/Seat/SeatTaken/${seatIDToSend}`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n  };\r\n\r\n  const renderSeats = () => {\r\n    const seatMap = [];\r\n    for (let s = 0; s < sections; s++) {\r\n      const sectionRows = [];\r\n      for (let i = 0; i < rows; i++) {\r\n        const row = [];\r\n        for (let j = 0; j < seatsPerRow; j++) {\r\n          const seatNumber = j + 1;\r\n          const isSelected =\r\n            selectedSeat &&\r\n            selectedSeat.section === s &&\r\n            selectedSeat.row === i &&\r\n            selectedSeat.seat === j;\r\n          const seatIndex = i * seatsPerRow + j;\r\n          const isDisabled = isSeatTaken(seatIndex);\r\n\r\n          row.push(\r\n            <button\r\n              key={`seat-${s}-${i}-${j}`}\r\n              onClick={() => handleSeatClick(s, i, j)}\r\n              className={`seat ${isSelected ? \"selected\" : \"\"}`}\r\n              disabled={isDisabled}\r\n            >\r\n              {`S${s + 1}-R${i + 1}-Seat${seatNumber}`}\r\n            </button>\r\n          );\r\n        }\r\n        sectionRows.push(\r\n          <div key={`row-${s}-${i}`} className=\"seat-row\">\r\n            {row}\r\n          </div>\r\n        );\r\n      }\r\n      seatMap.push(\r\n        <div key={`section-${s}`} className=\"section\">\r\n          <h2>Seat Map</h2>\r\n          <div className=\"seat-map\">{sectionRows}</div>\r\n        </div>\r\n      );\r\n    }\r\n    return seatMap;\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <div>\r\n      <p>Pink: Comfort</p>\r\n      <p>Orange: Business</p>\r\n      <p>Grey: Economy</p>\r\n    </div>\r\n    <div className=\"seat-selection\">\r\n      {renderSeats()}\r\n      {selectedSeat && (\r\n        <button className=\"continue-button\" onClick={handleContinue}>\r\n          Continue\r\n        </button>\r\n      )}\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SeatSelection;\r\n","import React from \"react\";\nimport \"./Insurance.css\";\n\nfunction Insurance({ onInsuranceSubmit, setInsurance }) {\n  const handleInsuranceSubmit = () => {\n    onInsuranceSubmit();\n  };\n\n  const chosenInsurance = () => {\n    setInsurance(true);\n    onInsuranceSubmit();\n  };\n\n  return (\n    <div>\n      <div className=\"flex-container\">\n        <div className=\"insurance-container\">\n          <h2>Purchase an Insurance Plan</h2>\n          <h1><b>$50.00</b></h1>\n          <br></br>\n          <div>\n            - Cancel for no additional fees\n            <br></br>- 1 free checked bag\n            <br></br>- Full refund upon cancellation\n            <br></br>\n            <br></br>\n            <button onClick={chosenInsurance}>Select</button>\n          </div>\n        </div>\n      </div>\n      <br></br>\n      <br></br>\n      <button onClick={handleInsuranceSubmit}>Skip Insurance and Pay</button>\n    </div>\n  );\n}\n\nexport default Insurance;\n","import React, { useState, useEffect } from \"react\";\nimport Modal from \"react-modal\";\nimport \"./Payment.css\";\n\nfunction Payment({ onPaymentSubmit, hasInsurance, seatID, flightID, email }) {\n  const [cardNumber, setCardNumber] = useState(\"\");\n  const [expiry, setExpiry] = useState(\"\");\n  const [cvv, setCvv] = useState(\"\");\n  const [isPaymentSuccessful, setPaymentSuccessful] = useState(false);\n  const [seatPrice, setSeatPrice] = useState(0);\n  const [flightPrice, setFlightPrice] = useState(0);\n  const [subtotal, setSubtotal] = useState(0);\n  const [totalAmnt, setTotalAmnt] = useState(0);\n  const [ticketID, setTicketID] = useState(0);\n  var formattedNumber = 0;\n\n  useEffect(() => {\n    const getPriceDetails = async () => {\n      const recieveSeatPrice = await fetch(\n        `http://localhost:8080/FlightApp/Seat/GetPriceBySeatID/${seatID}`,\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      const gottenSeatPrice = await recieveSeatPrice.json();\n      setSeatPrice(gottenSeatPrice);\n\n      const recieveFlightPrice = await fetch(\n        `http://localhost:8080/FlightApp/Flight/GetFlightPriceUsingFlightID/${flightID}`,\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      const gottenFlightPrice = await recieveFlightPrice.json();\n      setFlightPrice(gottenFlightPrice);\n    };\n\n    getPriceDetails();\n    console.log(email);\n  }, []);\n\n  useEffect(() => {\n    const calculateDiscount = subtotal * 1.05 - subtotal * 1.05 * 0.2;\n    console.log(calculateDiscount);\n    setTotalAmnt(calculateDiscount);\n    console.log(totalAmnt);\n    formattedNumber = parseFloat(totalAmnt.toFixed(2)).toString();\n    console.log(formattedNumber);\n  }, [subtotal]);\n\n  useEffect(() => {\n    calculateSubtotal();\n  }, [seatPrice, flightPrice, hasInsurance]);\n\n  const calculateSubtotal = () => {\n    if (hasInsurance) {\n      setSubtotal(seatPrice + flightPrice + 50);\n    } else {\n      setSubtotal(seatPrice + flightPrice);\n    }\n  };\n\n  const sendCustomerFlightDetails = async () => {\n    const getTicketID = await fetch(\n      `http://localhost:8080/FlightApp/Ticket/Create/${email}/${flightID}/${seatID}/${totalAmnt}/false/${hasInsurance}`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    const gottenTicketID = await getTicketID.json();\n    setTicketID(gottenTicketID);\n    console.log(\"FromBACK: \", gottenTicketID);\n    console.log(\"TicketID: \", ticketID);\n  };\n\n  useEffect(() => {\n    sendPaymentDetails();\n  }, [ticketID]);\n\n  const sendPaymentDetails = () => {\n    fetch(\n      `http://localhost:8080/FlightApp/Payment/Create/${cardNumber}/${expiry}/${cvv}/${totalAmnt}/${ticketID}`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n  };\n\n  const handleSubmit = () => {\n    //SEND successive POST's to backend\n    sendCustomerFlightDetails();\n    setPaymentSuccessful(true);\n  };\n\n  const handlePaymentSuccessClose = () => {\n    setPaymentSuccessful(false);\n    resetAllFields();\n    onPaymentSubmit({ cardNumber, expiry, cvv });\n  };\n\n  const resetAllFields = () => {\n    setCardNumber(\"\");\n    setExpiry(\"\");\n    setCvv(\"\");\n    setPaymentSuccessful(false);\n    setSeatPrice(0);\n    setFlightPrice(0);\n    setSubtotal(0);\n    setTotalAmnt(0);\n    setTicketID(0);\n  };\n\n  return (\n    <div className=\"payment-form\">\n      <h2>Payment Details</h2>\n      <div id=\"priceDetails\">\n        <h3>Payment Amount Breakdown</h3>\n        <div>Seat Price: ${seatPrice}</div>\n        <div>Flight Price: ${flightPrice}</div>\n        {hasInsurance ? (\n          <div>Insurance Price: $50</div>\n        ) : (\n          <div>Insurance Price - Skipped: $0</div>\n        )}\n        <div>Subtotal: {subtotal}</div>\n        <div>Tax: ${subtotal * 0.05}</div>\n        <div>\n          Since you're a registed member, we are offering you a 20% discount!\n        </div>\n        <div>\n          <b>Total Amount: ${totalAmnt}</b>\n        </div>\n      </div>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"cardNumber\">Card Number</label>\n        <input\n          type=\"text\"\n          id=\"cardNumber\"\n          pattern=\"\\d{16}\"\n          value={cardNumber}\n          onChange={(e) => setCardNumber(e.target.value)}\n        />\n        <div className=\"expiry-fields\">\n          <label htmlFor=\"expiry\">Expiry Year</label>\n          <input\n            type=\"text\"\n            id=\"expiry\"\n            value={expiry}\n            pattern=\"\\d{4}\"\n            onChange={(e) => setExpiry(e.target.value)}\n            maxLength=\"4\" // Limit input to 4 characters\n            placeholder=\"MMYY\"\n          />\n        </div>\n        <label htmlFor=\"cvv\">CVV</label>\n        <input\n          type=\"text\"\n          id=\"cvv\"\n          value={cvv}\n          pattern=\"\\d{3}\"\n          onChange={(e) => setCvv(e.target.value)}\n          maxLength=\"3\" // Limit input to 3 characters\n          placeholder=\"###\"\n        />\n        <button type=\"submit\">Submit Payment</button>\n      </form>\n      <Modal\n        isOpen={isPaymentSuccessful}\n        onRequestClose={handlePaymentSuccessClose}\n        contentLabel=\"Payment Success Modal\"\n      >\n        <div>\n          <h2>Payment Successful!</h2>\n          <p>Check your email for your ticket and receipt.</p>\n          <button onClick={handlePaymentSuccessClose}>OK!</button>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n\nexport default Payment;\n","import React, { useState, useEffect } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport \"./Payment.css\";\r\n\r\nfunction GuestPayment({ onPaymentSubmit, hasInsurance, seatID, flightID, email }) {\r\n  const [cardNumber, setCardNumber] = useState(\"\");\r\n  const [expiry, setExpiry] = useState(\"\");\r\n  const [cvv, setCvv] = useState(\"\");\r\n  const [isPaymentSuccessful, setPaymentSuccessful] = useState(false);\r\n  const [seatPrice, setSeatPrice] = useState(0);\r\n  const [flightPrice, setFlightPrice] = useState(0);\r\n  const [subtotal, setSubtotal] = useState(0);\r\n  const [totalAmnt, setTotalAmnt] = useState(0);\r\n  var formattedNumber = 0;\r\n\r\n  useEffect(() => {\r\n    const getPriceDetails = async () => {\r\n      const recieveSeatPrice = await fetch(\r\n        `http://localhost:8080/FlightApp/Seat/GetPriceBySeatID/${seatID}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      const gottenSeatPrice = await recieveSeatPrice.json();\r\n      setSeatPrice(gottenSeatPrice);\r\n\r\n      const recieveFlightPrice = await fetch(\r\n        `http://localhost:8080/FlightApp/Flight/GetFlightPriceUsingFlightID/${flightID}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      const gottenFlightPrice = await recieveFlightPrice.json();\r\n      setFlightPrice(gottenFlightPrice);\r\n\r\n      //calculateSubtotal();\r\n    };\r\n    getPriceDetails();\r\n    console.log(email);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const calculateAmount = subtotal * 1.05;\r\n    console.log(calculateAmount);\r\n    setTotalAmnt(calculateAmount);\r\n    console.log(totalAmnt);\r\n    formattedNumber = parseFloat(totalAmnt.toFixed(2)).toString();\r\n    console.log(formattedNumber);\r\n  }, [subtotal]);\r\n\r\n  useEffect(() => {\r\n    calculateSubtotal();\r\n  }, [seatPrice, flightPrice, hasInsurance]);\r\n\r\n  const calculateSubtotal = () => {\r\n    if (hasInsurance) {\r\n      setSubtotal(seatPrice + flightPrice + 50);\r\n    } else {\r\n      setSubtotal(seatPrice + flightPrice);\r\n    }\r\n  };\r\n\r\n  const sendCustomerFlightDetails = () => {\r\n    fetch(\r\n      `http://localhost:8080/FlightApp/Ticket/Create/${email}/${flightID}/${seatID}/${totalAmnt}/false/${hasInsurance}`,\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n  };\r\n\r\n  const sendPaymentDetails = () => {\r\n    fetch(\r\n      `http://localhost:8080/FlightApp/Payment/Create/${cardNumber}/${expiry}/${cvv}/${totalAmnt}`,\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    //SEND successive POST's to backend\r\n    sendCustomerFlightDetails();\r\n    sendPaymentDetails();\r\n    setPaymentSuccessful(true);\r\n  };\r\n\r\n  const handlePaymentSuccessClose = () => {\r\n    setPaymentSuccessful(false);\r\n    onPaymentSubmit({ cardNumber, expiry, cvv });\r\n  };\r\n\r\n  return (\r\n    <div className=\"payment-form\">\r\n      <h2>Payment Details</h2>\r\n      <div id=\"priceDetails\">\r\n        <h3>Payment Amount Breakdown</h3>\r\n        <div>Seat Price: ${seatPrice}</div>\r\n        <div>Flight Price: ${flightPrice}</div>\r\n        {hasInsurance ? (\r\n          <div>Insurance Price: $50</div>\r\n        ) : (\r\n          <div>Insurance Price - Skipped: $0</div>\r\n        )}\r\n        <div>Subtotal: {subtotal}</div>\r\n        <div>Tax: ${subtotal * 0.05}</div>\r\n        <div>\r\n          Since you're a registed member, we are offering you a 20% discount!\r\n        </div>\r\n        <div>\r\n          <b>Total Amount: ${totalAmnt}</b>\r\n        </div>\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"cardNumber\">Card Number</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"cardNumber\"\r\n          pattern=\"\\d{16}\"\r\n          value={cardNumber}\r\n          onChange={(e) => setCardNumber(e.target.value)}\r\n        />\r\n        <div className=\"expiry-fields\">\r\n          <label htmlFor=\"expiry\">Expiry Year</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"expiry\"\r\n            value={expiry}\r\n            pattern=\"\\d{4}\"\r\n            onChange={(e) => setExpiry(e.target.value)}\r\n            maxLength=\"4\" // Limit input to 4 characters\r\n            placeholder=\"MMYY\"\r\n          />\r\n        </div>\r\n        <label htmlFor=\"cvv\">CVV</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"cvv\"\r\n          value={cvv}\r\n          pattern=\"\\d{3}\"\r\n          onChange={(e) => setCvv(e.target.value)}\r\n          maxLength=\"3\" // Limit input to 3 characters\r\n          placeholder=\"###\"\r\n        />\r\n        <button type=\"submit\">Submit Payment</button>\r\n      </form>\r\n      <Modal\r\n        isOpen={isPaymentSuccessful}\r\n        onRequestClose={handlePaymentSuccessClose}\r\n        contentLabel=\"Payment Success Modal\"\r\n      >\r\n        <div>\r\n          <h2>Payment Successful!</h2>\r\n          <p>Check your email for your ticket and receipt.</p>\r\n          <button onClick={handlePaymentSuccessClose}>OK!</button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GuestPayment;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport SeatSelection from \"./SeatSelection\";\nimport Insurance from \"./Insurance\";\nimport Payment from \"./Payment\";\nimport GuestPayment from \"./GuestPayment\";\n\nfunction App() {\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const [showTicketPurchaseForm, setShowTicketPurchaseForm] = useState(false);\n  //const [departureDate, setDepartureDate] = useState(\"\");\n  //const [destination, setDestination] = useState(\"\");\n  //const [origin, setOrigin] = useState(\"\");\n  const [ticketId, setTicketId] = useState(\"\");\n  //const [role, setRole] = useState(\"\"); // State to store the selected role\n  const [showSeatSelection, setShowSeatSelection] = useState(false);\n  const [showPayment, setShowPayment] = useState(false);\n  const [showInsurance, setShowInsurance] = useState(false);\n  const [destOptions, setDestOptions] = useState([]);\n  const [selectedDest, setSelectedDest] = useState(\"\");\n  const [availableFlights, setAvailableFlights] = useState([]);\n  const [showSearchFlight, setShowSearchFlight] = useState(false);\n  const [sendFlightID, setSendFlightID] = useState(0);\n  const [sendSeatID, setSendSeatID] = useState(0);\n  const [signupUsername, setSignupUsername] = useState(\"\");\n  const [signupEmail, setSignupEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [signupPhone, setSignupPhone] = useState(\"\");\n  const [signupPassword, setSignupPassword] = useState(\"\");\n  const [signupAddress, setSignupAddress] = useState(\"\");\n  const [signupPostalCode, setSignupPostalCode] = useState(\"\");\n  const [signupCity, setSignupCity] = useState(\"\");\n  const [signupCountry, setSignupCountry] = useState(\"\");\n  const [insurance, setInsurance] = useState(false);\n  const [crewID, setCrewID] = useState(\"\");\n  const [crewPassword, setCrewPassword] = useState(\"\");\n  const [showPassnegerList, setShowPassengerList] = useState(false);\n  const [passengerList, setPassengerList] = useState([]);\n  const [isRegisteredUser, setIsRegisteredUser] = useState(false);\n  const [loginAttemptError, setLoginAttemptError] = useState(\"\");\n  const uniqueDestOptions = [...new Set(destOptions)];\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  const [showCrewLogin, setShowCrewLogin] = useState(false);\n\n  const handleButtonClick = (option) => {\n    const lowerCaseOption = option.toLowerCase();\n    setSelectedOption(lowerCaseOption);\n    if (lowerCaseOption === \"member\") {\n      setShowModal(true);\n      setShowTicketPurchaseForm(false);\n    } else if (lowerCaseOption === \"guest\") {\n      // Directly show ticket purchase options for guests\n      setShowTicketPurchaseForm(true);\n      setShowModal(false);\n      setSelectedOption(\"purchase ticket\"); // Ensure this is set for guests\n    } else if (lowerCaseOption === \"purchase ticket\") {\n      setShowTicketPurchaseForm(true);\n      setShowModal(false);\n    } else if (lowerCaseOption === \"cancel ticket\") {\n      setShowTicketPurchaseForm(false);\n      setShowModal(false);\n      setSelectedOption(lowerCaseOption);\n    } else if (lowerCaseOption === \"third option\") {\n      setSelectedOption(\"signup\");\n    } else if (lowerCaseOption === \"crew view\") {\n      setShowModal(false);\n      setSelectedOption(\"crew login\");\n      setShowCrewLogin(true);\n    }\n\n    getAllDestinations();\n  };\n\n  const handleSignup = (e) => {\n    e.preventDefault();\n\n    if (!emailRegex.test(signupEmail)) {\n      setEmailError(\"Please enter a valid email address.\");\n      return;\n    }\n\n    const signupData = {\n      name: signupUsername,\n      emailAddr: signupEmail,\n      phoneNum: signupPhone,\n      customerPassword: signupPassword,\n    };\n    console.log(\"Signup Data:\", signupData);\n\n    fetch(\n      `http://localhost:8080/FlightApp/Customer/Create/${signupAddress}/${signupPostalCode}/${signupCity}/${signupCountry}`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(signupData),\n      }\n    );\n\n    setSignupUsername(\"\");\n    setSignupEmail(\"\");\n    setSignupPhone(\"\");\n    setSignupPassword(\"\");\n    setSignupAddress(\"\");\n    setSignupPostalCode(\"\");\n    setSignupCity(\"\");\n    setSignupCountry(\"\");\n\n    // ***HOW DO WE REDIRECT TO FRONT PAGE *** //\n    setSelectedOption(null); // Assuming this clears the signup form and displays initial options\n  };\n\n  useEffect(() => {\n    getAllDestinations();\n  }, []);\n\n  const getAllDestinations = async () => {\n    try {\n      const response = await fetch(\n        `http://localhost:8080/FlightApp/Flight/GetAllDestinations`,\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const destList = await response.json();\n      setDestOptions(destList); // Update state here\n    } catch (error) {\n      console.error(\"There was a problem with the fetch operation:\", error);\n    }\n  };\n\n  const getAllFlightsForLocation = async () => {\n    console.log(selectedDest);\n    const recieve = await fetch(\n      `http://localhost:8080/FlightApp/Flight/GetAllFlightsByDestination/${selectedDest}`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    const allFlightsOfLocation = await recieve.json();\n    setAvailableFlights(allFlightsOfLocation);\n    console.log(allFlightsOfLocation);\n  };\n\n  const checkCrewLogin = async () => {\n    const recieve = await fetch(\n      `http://localhost:8080/FlightApp/Crew/Validation/${crewID}/${crewPassword}`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    const res = await recieve.json();\n    if (res === true) {\n      setShowPassengerList(true);\n      setShowCrewLogin(false);\n      const recieve = await fetch(\n        `http://localhost:8080/FlightApp/Flight/GetPassengerList/${crewID}`,\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      const customers = await recieve.json();\n      setPassengerList(customers);\n      console.log(\"Returned Customers:\", customers);\n      console.log(\"Set Customers:\", passengerList);\n    } else if (res === false) {\n      setSelectedOption(null);\n      setCrewID(\"\");\n      setCrewPassword(\"\");\n      window.alert(\n        \"You have attempted to access confidential information without proper authentication credentials. Page exited\"\n      );\n    }\n  };\n\n  const handleModalClose = () => {\n    setShowModal(false);\n    //setUsername(\"\");\n    setPassword(\"\");\n    //setRole(\"\"); // Reset the role when the modal is closed\n  };\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    console.log(\"Username:\", username);\n    console.log(\"Password:\", password);\n    const recieve = await fetch(\n      `http://localhost:8080/FlightApp/Customer/Validate/${username}/${password}`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    const validateAcc = await recieve.json();\n    if (validateAcc === true) {\n      setIsRegisteredUser(true);\n      setLoggedInUser(username);\n      handleModalClose();\n    } else if (validateAcc === false) {\n      setUsername(\"\");\n      setPassword(\"\");\n      setLoginAttemptError(\n        \"The given userrname or password is incorrect. Please try again.\"\n      );\n      return;\n    }\n  };\n\n  const handleTicketPurchase = () => {\n    console.log(\"Destination:\", selectedDest);\n    getAllFlightsForLocation(); // Fetch and set available flights\n    setShowTicketPurchaseForm(false);\n    setShowSearchFlight(true); // Show the flight search UI\n  };\n\n  const handleFlightSelection = (flight) => {\n    console.log(\"Selected flight:\", flight);\n    // console.log(\"CHECK:\", sendFlightID);\n    // Implement what happens after a flight is selected, e.g., storing flight data\n    // and transitioning to the seat selection phase\n    setShowSearchFlight(false);\n    setShowSeatSelection(true);\n  };\n\n  const handleLogout = () => {\n    // Clear necessary states and reset them to default values\n    setLoggedInUser(null);\n    setSelectedOption(null);\n    setShowModal(false);\n    setUsername(\"\");\n    setPassword(\"\");\n    setShowTicketPurchaseForm(false);\n    setSelectedDest(\"\");\n    setSendFlightID(0);\n    setSendSeatID(0);\n    setInsurance(false);\n    setShowSeatSelection(false);\n    setShowPayment(false);\n    setShowInsurance(false);\n    setShowSearchFlight(false);\n    setShowCrewLogin(false); // Ensure crew login form is hidden\n  };\n\n  const handleSeatSelect = (section, row, seat, continueToInsurance) => {\n    if (continueToInsurance) {\n      setShowSeatSelection(false);\n      setShowInsurance(true);\n    }\n\n    const seatID = (sendFlightID - 1) * 15 + row * 5 + (seat + 1);\n    setSendSeatID(seatID);\n  };\n  const handlePaymentSubmit = (paymentDetails) => {\n    console.log(\"Payment Details:\", paymentDetails);\n    // Handle the payment submission logic here\n    setShowPayment(false);\n  };\n\n  const handleInsuranceContinue = () => {\n    setShowInsurance(false);\n    setShowPayment(true);\n    console.log(\"AFTER INS CHOSEN:\", insurance);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <h2 className=\"title\">Flight Booker</h2>\n        {loggedInUser && (\n          <div className=\"user-info\">\n            <span>Logged in as {loggedInUser}</span>\n            <button onClick={handleLogout}>Log out</button>\n          </div>\n        )}\n      </div>\n      <div className=\"main text-center mt-5\">\n        {!loggedInUser && selectedOption === null && (\n          <div className=\"d-grid gap-2 col-6 mx-auto\">\n            <h4>Continue As</h4>\n            <button\n              className=\"btn btn-primary\"\n              type=\"button\"\n              onClick={() => handleButtonClick(\"member\")}\n            >\n              Member\n            </button>\n            <button\n              className=\"btn btn-primary\"\n              type=\"button\"\n              onClick={() => handleButtonClick(\"guest\")}\n            >\n              Guest\n            </button>\n            <button\n              className=\"btn btn-primary\"\n              type=\"button\"\n              onClick={() => handleButtonClick(\"cancel ticket\")}\n            >\n              Cancel Ticket\n            </button>\n            <button\n              className=\"btn btn-primary\"\n              type=\"button\"\n              onClick={() => handleButtonClick(\"crew view\")}\n            >\n              Crew Login\n            </button>\n            <a\n              href=\"#\"\n              className=\"underlined-text\"\n              onClick={() => handleButtonClick(\"Third Option\")}\n            >\n              Don't have an account? Sign up here\n            </a>\n          </div>\n        )}\n\n        {selectedOption === \"signup\" && (\n          <div className=\"signup-form\">\n            <h2>Sign Up</h2>\n            <form onSubmit={handleSignup}>\n              <label htmlFor=\"signup-username\">First and Last Name</label>\n              <input\n                type=\"text\"\n                id=\"signup-username\"\n                value={signupUsername}\n                onChange={(e) => setSignupUsername(e.target.value)}\n                required\n              />\n              <label htmlFor=\"signup-email\">Email</label>\n              <input\n                type=\"email\"\n                id=\"signup-email\"\n                value={signupEmail}\n                onChange={(e) => {\n                  setSignupEmail(e.target.value);\n                  setEmailError(\"\"); // Clear email error on input change\n                }}\n                required\n              />\n              {emailError && <p style={{ color: \"red\" }}>{emailError}</p>}\n\n              <label htmlFor=\"signup-phone\">Phone Number</label>\n              <input\n                type=\"tel\"\n                id=\"signup-phone\"\n                value={signupPhone}\n                onChange={(e) => setSignupPhone(e.target.value)}\n                required\n              />\n              <label htmlFor=\"signup-password\">Password</label>\n              <input\n                type=\"password\"\n                id=\"signup-password\"\n                value={signupPassword}\n                onChange={(e) => setSignupPassword(e.target.value)}\n                required\n              />\n              <label htmlFor=\"signup-address\">Address</label>\n              <input\n                type=\"text\"\n                id=\"signup-address\"\n                value={signupAddress}\n                onChange={(e) => setSignupAddress(e.target.value)}\n                required\n              />\n\n              <label htmlFor=\"signup-postal-code\">Postal Code</label>\n              <input\n                type=\"text\"\n                id=\"signup-postal-code\"\n                value={signupPostalCode}\n                onChange={(e) => setSignupPostalCode(e.target.value)}\n                required\n              />\n\n              <label htmlFor=\"signup-city\">City</label>\n              <input\n                type=\"text\"\n                id=\"signup-city\"\n                value={signupCity}\n                onChange={(e) => setSignupCity(e.target.value)}\n                required\n              />\n\n              <label htmlFor=\"signup-country\">Country</label>\n              <input\n                type=\"text\"\n                id=\"signup-country\"\n                value={signupCountry}\n                onChange={(e) => setSignupCountry(e.target.value)}\n                required\n              />\n              <button type=\"submit\">Sign Up</button>\n            </form>\n          </div>\n        )}\n\n        {loggedInUser &&\n        !showTicketPurchaseForm &&\n        selectedOption !== \"cancel ticket\" &&\n        selectedOption !== \"purchase ticket\" ? (\n          <div className=\"ticket-options\">\n            <button\n              className=\"btn btn-primary\"\n              type=\"button\"\n              onClick={() => handleButtonClick(\"purchase ticket\")}\n            >\n              Purchase Ticket\n            </button>\n            {/* <button\n              className=\"btn btn-secondary\"\n              type=\"button\"\n              onClick={() => handleButtonClick(\"cancel ticket\")}\n            >\n              Cancel Ticket\n            </button> */}\n          </div>\n        ) : null}\n\n        {showModal &&\n          (selectedOption === \"member\" || selectedOption === \"Member\") && (\n            <div className=\"modal\">\n              <div className=\"modal-content\">\n                <span className=\"close\" onClick={handleModalClose}>\n                  &times;\n                </span>\n                <h2>Member Login</h2>\n                <form onSubmit={handleLogin}>\n                  <label htmlFor=\"username\">Username</label>\n                  <input\n                    type=\"text\"\n                    id=\"username\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                  />\n                  <label htmlFor=\"password\">Password</label>\n                  <input\n                    type=\"password\"\n                    id=\"password\"\n                    value={password}\n                    onChange={(e) => {\n                      setPassword(e.target.value);\n                      setLoginAttemptError(\"\");\n                    }}\n                  />\n\n                  {loginAttemptError && (\n                    <p style={{ color: \"red\" }}>{loginAttemptError}</p>\n                  )}\n                  {/* <div className=\"input-group mb-3\">\n                    <label\n                      className=\"input-group-text\"\n                      htmlFor=\"inputGroupSelect01\"\n                    >\n                      Login as\n                    </label>\n                    <select\n                      className=\"form-select\"\n                      id=\"inputGroupSelect01\"\n                      onChange={(e) => setRole(e.target.value)} // Set the role value\n                    >\n                      <option selected>Choose...</option>\n                      <option value=\"Customer\">Customer</option>\n                      <option value=\"Travel Agent\">Travel Agent</option>\n                      <option value=\"Crew\">Crew</option>\n                      <option value=\"System Admin\">System Admin</option>\n                    </select>\n                  </div> */}\n\n                  <button type=\"submit\">Log In</button>\n                </form>\n              </div>\n            </div>\n          )}\n\n        {showCrewLogin && selectedOption === \"crew login\" && (\n          <div className=\"crew-login-input\">\n            <label htmlFor=\"crewId\">Enter your Crew ID</label>\n            <input\n              type=\"text\"\n              id=\"crewId\"\n              value={crewID}\n              onChange={(e) => setCrewID(e.target.value)}\n            />\n\n            <label htmlFor=\"crewPass\">Enter your Password</label>\n            <input\n              type=\"text\"\n              id=\"crewPass\"\n              value={crewPassword}\n              onChange={(e) => setCrewPassword(e.target.value)}\n            />\n            <button onClick={() => checkCrewLogin()}>Login</button>\n          </div>\n        )}\n\n        {showPassnegerList && (\n          <div className=\"crew-login-input\">\n            {passengerList.length > 0 ? (\n              <div>\n                {passengerList.map((passenger, index) => (\n                  <div key={index}>\n                    <p>Name: {passenger.name}</p>\n                    <p>Email: {passenger.emailAddr}</p>\n                    <p>Phone Number: {passenger.phoneNum}</p>\n                    <p>ID: {passenger.customerID}</p>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <p>\n                No passengers have currently booked a ticket for your flight.\n              </p>\n            )}\n          </div>\n        )}\n\n        {selectedOption === \"cancel ticket\" && (\n          <div className=\"ticket-id-input\">\n            <label htmlFor=\"ticketId\">Enter your ticket ID</label>\n            <input\n              type=\"text\"\n              id=\"ticketId\"\n              value={ticketId}\n              onChange={(e) => setTicketId(e.target.value)}\n            />\n            <button onClick={() => setSelectedOption(null)}>Go back</button>\n          </div>\n        )}\n\n        {showTicketPurchaseForm && (\n          <div className=\"ticket-purchase-form\">\n            <h4>Purchase Ticket</h4>\n            <form>\n              {/* <label htmlFor=\"departureDate\">Departure Date</label>\n              <input\n                type=\"date\"\n                id=\"departureDate\"\n                value={departureDate}\n                onChange={(e) => setDepartureDate(e.target.value)}\n              /> */}\n              <label htmlFor=\"destination\">Destination</label>\n              {/* {<input\n                type=\"text\"\n                id=\"destination\"\n                value={destination}\n                onChange={(e) => setDestination(e.target.value)}\n              />} */}\n\n              <select\n                className=\"form-select\"\n                id=\"inputGroupSelect01\"\n                value={selectedDest}\n                onChange={(e) => setSelectedDest(e.target.value)}\n              >\n                <option value=\"\">Choose...</option>\n                {uniqueDestOptions.map((destination, index) => (\n                  <option key={index} value={destination}>\n                    {destination}\n                  </option>\n                ))}\n              </select>\n\n              {/* <label htmlFor=\"origin\">Origin</label>\n              <input\n                type=\"text\"\n                id=\"origin\"\n                value={origin}\n                onChange={(e) => setOrigin(e.target.value)}\n              /> */}\n              <button type=\"button\" onClick={handleTicketPurchase}>\n                Next\n              </button>\n            </form>\n          </div>\n        )}\n        {/* {!showTicketPurchaseForm && selectedOption === \"purchase ticket\" && (\n          <SeatSelection onSeatSelect={handleSeatSelect} />\n        )} */}\n        {showSearchFlight && (\n          <div>\n            <h2>Select a Flight</h2>\n            {availableFlights.length > 0 ? (\n              <div>\n                {availableFlights.map((flight, index) => (\n                  <div key={index}>\n                    <h3>Flight: {flight.flight_id}</h3>\n                    <p>\n                      From: {flight.departureCity} {flight.departureCountry}{\" \"}\n                      {flight.departureAirport}\n                    </p>\n                    <p>\n                      To: {flight.destinationCity} {flight.destinationCountry}{\" \"}\n                      {flight.destinationAirport}\n                    </p>\n                    <p>\n                      Departure: {flight.departureDate} at{\" \"}\n                      {flight.departureTime} - Arrival: {flight.arrivalDate} at{\" \"}\n                      {flight.arrivalTime}\n                    </p>\n                    <button\n                      onClick={() => {\n                        setSendFlightID(flight.flight_id);\n                        handleFlightSelection(flight);\n                      }}\n                    >\n                      Select this Flight\n                    </button>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <p>No flights available for the selected destination.</p>\n            )}\n          </div>\n        )}\n        {showSeatSelection &&\n          !showTicketPurchaseForm &&\n          selectedOption === \"purchase ticket\" && (\n            <SeatSelection\n              onSeatSelect={handleSeatSelect}\n              flightID={sendFlightID}\n            />\n          )}\n        {showInsurance && (\n          <Insurance\n            onInsuranceSubmit={handleInsuranceContinue}\n            setInsurance={setInsurance}\n          />\n        )}\n        {isRegisteredUser\n          ? showPayment && (\n              <Payment\n                onPaymentSubmit={handlePaymentSubmit}\n                hasInsurance={insurance}\n                seatID={sendSeatID}\n                flightID={sendFlightID}\n                email={username}\n              />\n            )\n          : showPayment && (\n              <GuestPayment\n                onPaymentSubmit={handlePaymentSubmit}\n                hasInsurance={insurance}\n                seatID={sendSeatID}\n                flightID={sendFlightID}\n              />\n            )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}