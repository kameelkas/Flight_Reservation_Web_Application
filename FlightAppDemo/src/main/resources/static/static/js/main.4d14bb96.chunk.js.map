{"version":3,"sources":["SeatSelection.js","Insurance.js","Payment.js","App.js","reportWebVitals.js","index.js"],"names":["SeatSelection","_ref","onSeatSelect","flightID","selectedSeat","setSelectedSeat","useState","handleSeatClick","section","row","seat","React","createElement","className","renderSeats","seatMap","s","sectionRows","i","j","seatNumber","isSelected","push","key","concat","onClick","handleContinue","console","log","seatIDToSend","fetch","method","headers","Content-Type","Insurance","onInsuranceSubmit","handleInsuranceSubmit","Payment","onPaymentSubmit","cardNumber","setCardNumber","expiryMonth","setExpiryMonth","expiryYear","setExpiryYear","cvv","setCvv","onSubmit","e","preventDefault","expiryDate","htmlFor","type","id","value","onChange","target","maxLength","placeholder","App","selectedOption","setSelectedOption","showModal","setShowModal","username","setUsername","password","setPassword","loggedInUser","setLoggedInUser","showTicketPurchaseForm","setShowTicketPurchaseForm","departureDate","setDepartureDate","origin","setOrigin","ticketId","setTicketId","role","setRole","showSeatSelection","setShowSeatSelection","showPayment","setShowPayment","showInsurance","setShowInsurance","destOptions","setDestOptions","selectedDest","setSelectedDest","availableFlights","setAvailableFlights","showSearchFlight","setShowSearchFlight","sendFlightID","setSendFlightID","handleButtonClick","option","lowerCaseOption","toLowerCase","getAllDestinations","useEffect","async","response","ok","Error","destList","json","error","handleModalClose","handleLogout","href","selected","handleLogin","map","destination","index","handleTicketPurchase","recieve","allFlightsOfLocation","getAllFlightsForLocation","length","flight","flight_id","departureCity","departureCountry","departureAirport","departureTime","arrivalDate","arrivalTime","handleFlightSelection","handleSeatSelect","continueToInsurance","handleInsuranceContinue","paymentDetails","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.4d14bb96.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./SeatSelection.css\"; // Import the CSS file for styling\r\n\r\nfunction SeatSelection({ onSeatSelect, flightID }) {\r\n  const rows = 3;\r\n  const seatsPerRow = 5;\r\n  const sections = 1; // Number of sections\r\n  const [selectedSeat, setSelectedSeat] = useState(null);\r\n\r\n  const handleSeatClick = (section, row, seat) => {\r\n    // If the clicked seat is already selected, deselect it\r\n    if (\r\n      selectedSeat &&\r\n      selectedSeat.section === section &&\r\n      selectedSeat.row === row &&\r\n      selectedSeat.seat === seat\r\n    ) {\r\n      setSelectedSeat(null);\r\n      onSeatSelect(null, null, null); // Notify the parent component of deselection\r\n    } else {\r\n      setSelectedSeat({ section, row, seat });\r\n      onSeatSelect(section, row, seat); // Notify the parent component of the selected seat\r\n    }\r\n  };\r\n\r\n  const handleContinue = () => {\r\n    onSeatSelect(\r\n      selectedSeat.section,\r\n      selectedSeat.row,\r\n      selectedSeat.seat,\r\n      true\r\n    ); // Adding a flag to indicate continuation\r\n    console.log(selectedSeat.row);\r\n    console.log(selectedSeat.seat);\r\n    console.log(flightID);\r\n    const seatIDToSend = (((flightID - 1)*15) + (selectedSeat.row*5) + (selectedSeat.seat + 1));\r\n    console.log(seatIDToSend);\r\n\r\n    fetch(`http://localhost:8080/FlightApp/Seat/SeatTaken/${seatIDToSend}`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n  };\r\n\r\n  const renderSeats = () => {\r\n    const seatMap = [];\r\n    for (let s = 0; s < sections; s++) {\r\n      const sectionRows = [];\r\n      for (let i = 0; i < rows; i++) {\r\n        const row = [];\r\n        for (let j = 0; j < seatsPerRow; j++) {\r\n          const seatNumber = j + 1;\r\n          const isSelected =\r\n            selectedSeat &&\r\n            selectedSeat.section === s &&\r\n            selectedSeat.row === i &&\r\n            selectedSeat.seat === j;\r\n          row.push(\r\n            <button\r\n              key={`seat-${s}-${i}-${j}`}\r\n              onClick={() => handleSeatClick(s, i, j)}\r\n              className={`seat ${isSelected ? \"selected\" : \"\"}`}\r\n            >\r\n              {`S${s + 1}-R${i + 1}-Seat${seatNumber}`}\r\n            </button>\r\n          );\r\n        }\r\n        sectionRows.push(\r\n          <div key={`row-${s}-${i}`} className=\"seat-row\">\r\n            {row}\r\n          </div>\r\n        );\r\n      }\r\n      seatMap.push(\r\n        <div key={`section-${s}`} className=\"section\">\r\n          <h2>Seat Map</h2>\r\n          <div className=\"seat-map\">{sectionRows}</div>\r\n        </div>\r\n      );\r\n    }\r\n    return seatMap;\r\n  };\r\n\r\n  return (\r\n    <div className=\"seat-selection\">\r\n      {renderSeats()}\r\n      {selectedSeat && (\r\n        <button className=\"continue-button\" onClick={handleContinue}>\r\n          Continue\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SeatSelection;\r\n","import React from \"react\";\nimport \"./Insurance.css\";\n\nfunction Insurance({ onInsuranceSubmit }) {\n  const handleInsuranceSubmit = () => {\n    // Implement your logic for insurance submission\n    onInsuranceSubmit();\n  };\n\n  return (\n    <div className=\"insurance-selection\">\n      <div>\n        <h2>Insurance Selection</h2>\n        <br></br>\n        <div className=\"flex-container\">\n          <div className=\"left-div\">\n            <h4>Fully Covered</h4>\n            <br></br>\n            <div>\n              \nCancel or change flight for no additional fees<br></br>- 1 free checked bag<br></br>- Free seat selection<br></br>- Fully refundable<br></br><br></br><button>Select</button></div></div><div className=\"right-div\"><h4>Partially Covered</h4><br></br><div>\nCancel or change flight for a fee<br></br>- Checked bag for a fee<br></br>- Seat selection for a fee<br></br>- Partially refundable<br></br><br></br><button>Select</button></div></div></div><br></br></div><button onClick={handleInsuranceSubmit}>Skip Insurance and Pay</button></div>\n);\n}\n\nexport default Insurance;","import React, { useState } from \"react\";\nimport \"./Payment.css\";\n\nfunction Payment({ onPaymentSubmit }) {\n  const [cardNumber, setCardNumber] = useState(\"\");\n  const [expiryMonth, setExpiryMonth] = useState(\"\");\n  const [expiryYear, setExpiryYear] = useState(\"\");\n  const [cvv, setCvv] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const expiryDate = expiryMonth + \"/\" + expiryYear; // Combine month and year\n    onPaymentSubmit({ cardNumber, expiryDate, cvv });\n  };\n\n  return (\n    <div className=\"payment-form\">\n      <h2>Payment Details</h2>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"cardNumber\">Card Number</label>\n        <input\n          type=\"text\"\n          id=\"cardNumber\"\n          value={cardNumber}\n          onChange={(e) => setCardNumber(e.target.value)}\n        />\n        <div className=\"expiry-fields\">\n          <div>\n            <label htmlFor=\"expiryMonth\">Expiry Month</label>\n            <input\n              type=\"text\"\n              id=\"expiryMonth\"\n              value={expiryMonth}\n              onChange={(e) => setExpiryMonth(e.target.value)}\n              maxLength=\"2\" // Limit input to 2 characters\n              placeholder=\"MM\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"expiryYear\">Expiry Year</label>\n            <input\n              type=\"text\"\n              id=\"expiryYear\"\n              value={expiryYear}\n              onChange={(e) => setExpiryYear(e.target.value)}\n              maxLength=\"4\" // Limit input to 4 characters\n              placeholder=\"YYYY\"\n            />\n          </div>\n        </div>\n        <label htmlFor=\"cvv\">CVV</label>\n        <input\n          type=\"text\"\n          id=\"cvv\"\n          value={cvv}\n          onChange={(e) => setCvv(e.target.value)}\n        />\n        <button type=\"submit\">Submit Payment</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Payment;","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport SeatSelection from \"./SeatSelection\";\nimport Insurance from \"./Insurance\";\nimport Payment from \"./Payment\";\n\nfunction App() {\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const [showTicketPurchaseForm, setShowTicketPurchaseForm] = useState(false);\n  const [departureDate, setDepartureDate] = useState(\"\");\n  //const [destination, setDestination] = useState(\"\");\n  const [origin, setOrigin] = useState(\"\");\n  const [ticketId, setTicketId] = useState(\"\");\n  const [role, setRole] = useState(\"\"); // State to store the selected role\n  const [showSeatSelection, setShowSeatSelection] = useState(false);\n  const [showPayment, setShowPayment] = useState(false);\n  const [showInsurance, setShowInsurance] = useState(false);\n  const [destOptions, setDestOptions] = useState([]);\n  const [selectedDest, setSelectedDest] = useState(\"\");\n  const [availableFlights, setAvailableFlights] = useState([]);\n  const [showSearchFlight, setShowSearchFlight] = useState(false);\n  const [sendFlightID, setSendFlightID] = useState(\"\");\n\n  const handleButtonClick = (option) => {\n    const lowerCaseOption = option.toLowerCase();\n    setSelectedOption(lowerCaseOption);\n    if (lowerCaseOption === \"member\") {\n      setShowModal(true);\n      setShowTicketPurchaseForm(false);\n    } else if (lowerCaseOption === \"guest\") {\n      // Directly show ticket purchase options for guests\n      setShowTicketPurchaseForm(true);\n      setShowModal(false);\n      setSelectedOption(\"purchase ticket\"); // Ensure this is set for guests\n    } else if (lowerCaseOption === \"purchase ticket\") {\n      setShowTicketPurchaseForm(true);\n      setShowModal(false);\n    } else if (lowerCaseOption === \"cancel ticket\") {\n      setShowTicketPurchaseForm(false);\n      setShowModal(false);\n      setSelectedOption(lowerCaseOption);\n    }\n\n    getAllDestinations();\n  };\n\n  useEffect(() => {\n    getAllDestinations();\n  }, []);\n\n  const getAllDestinations = async () => {\n    try {\n      const response = await fetch(\n        `http://localhost:8080/FlightApp/Flight/GetAllDestinations`,\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const destList = await response.json();\n      setDestOptions(destList); // Update state here\n    } catch (error) {\n      console.error(\"There was a problem with the fetch operation:\", error);\n    }\n  };\n\n  const getSeatPrice = async () => {\n    const recieve = await fetch(\n      `http://localhost:8080/FlightApp/Ticket/GetPrice/2`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    const seatPrice = await recieve.json();\n    console.log(seatPrice);\n  };\n\n  const getAllFlightsForLocation = async () => {\n    console.log(selectedDest);\n    const recieve = await fetch(\n      `http://localhost:8080/FlightApp/Flight/GetAllFlightsByDestination/${selectedDest}`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    const allFlightsOfLocation = await recieve.json();\n    setAvailableFlights(allFlightsOfLocation);\n    console.log(allFlightsOfLocation);\n  };\n\n  //http://localhost:8080/FlightApp/Flight/GetAllFlightsByDestination/London\n\n  const handleModalClose = () => {\n    setShowModal(false);\n    setUsername(\"\");\n    setPassword(\"\");\n    setRole(\"\"); // Reset the role when the modal is closed\n  };\n\n  const handleLogin = () => {\n    console.log(\"Username:\", username);\n    console.log(\"Password:\", password);\n    console.log(\"Role:\", role); // Log the selected role\n    setLoggedInUser(username);\n    handleModalClose();\n  };\n\n  const handleTicketPurchase = () => {\n    console.log(\"Destination:\", selectedDest);\n    getAllFlightsForLocation(); // Fetch and set available flights\n    setShowTicketPurchaseForm(false);\n    setShowSearchFlight(true); // Show the flight search UI\n  };\n  \n\n  const handleFlightSelection = (flightID) => {\n    // console.log(\"Selected flight:\", flight);\n    setSendFlightID(flightID); // Set the flight ID here\n    console.log(\"Selected flight ID:\", flightID);\n    console.log(\"CHECK:\", sendFlightID);\n    // Implement what happens after a flight is selected, e.g., storing flight data\n    // and transitioning to the seat selection phase\n    setShowSearchFlight(false);\n    setShowSeatSelection(true);\n  };\n\n  const changeToNum = (flightId) => {\n    const parsedNum = parseInt(flightId, 10);\n    if(!isNaN(parsedNum)) {\n      setSendFlightID(parsedNum);\n    } else {\n      console.error(\"INVALID: PAIN\");\n    };\n  };\n\n  const handleLogout = () => {\n    setLoggedInUser(null);\n    setSelectedOption(null);\n    setShowModal(false);\n    setUsername(\"\");\n    setPassword(\"\");\n    setShowTicketPurchaseForm(false);\n    setDepartureDate(\"\");\n    setSelectedDest(\"\");\n    setOrigin(\"\");\n    setSendFlightID(0);\n  };\n\n  const handleSeatSelect = (section, row, seat, continueToInsurance) => {\n    if (continueToInsurance) {\n      setShowSeatSelection(false);\n      setShowInsurance(true);\n      // Save the selected seat info if necessary\n    }\n    // ... existing seat selection logic ...\n  };\n  const handlePaymentSubmit = (paymentDetails) => {\n    console.log(\"Payment Details:\", paymentDetails);\n    // Handle the payment submission logic here\n  };\n\n  const handleInsuranceContinue = () => {\n    setShowInsurance(false);\n    setShowPayment(true);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <h2 className=\"title\">Flight Booker</h2>\n        {loggedInUser && (\n          <div className=\"user-info\">\n            <span>Logged in as {loggedInUser}</span>\n            <button onClick={handleLogout}>Log out</button>\n          </div>\n        )}\n      </div>\n      <div className=\"main text-center mt-5\">\n        {!loggedInUser && selectedOption === null && (\n          <div className=\"d-grid gap-2 col-6 mx-auto\">\n            <h4>Continue As</h4>\n            <button\n              className=\"btn btn-primary\"\n              type=\"button\"\n              onClick={() => handleButtonClick(\"member\")}\n            >\n              Member\n            </button>\n            <button\n              className=\"btn btn-primary\"\n              type=\"button\"\n              onClick={() => handleButtonClick(\"guest\")}\n            >\n              Guest\n            </button>\n            <a\n              href=\"#\"\n              className=\"underlined-text\"\n              onClick={() => handleButtonClick(\"Third Option\")}\n            >\n              Don't have an account? Sign up here\n            </a>\n          </div>\n        )}\n\n        {loggedInUser &&\n        !showTicketPurchaseForm &&\n        selectedOption !== \"cancel ticket\" &&\n        selectedOption !== \"purchase ticket\" ? (\n          <div className=\"ticket-options\">\n            <button\n              className=\"btn btn-primary\"\n              type=\"button\"\n              onClick={() => handleButtonClick(\"purchase ticket\")}\n            >\n              Purchase Ticket\n            </button>\n            <button\n              className=\"btn btn-secondary\"\n              type=\"button\"\n              onClick={() => handleButtonClick(\"cancel ticket\")}\n            >\n              Cancel Ticket\n            </button>\n          </div>\n        ) : null}\n\n        {showModal &&\n          (selectedOption === \"member\" || selectedOption === \"Member\") && (\n            <div className=\"modal\">\n              <div className=\"modal-content\">\n                <span className=\"close\" onClick={handleModalClose}>\n                  &times;\n                </span>\n                <h2>Member Login</h2>\n                <form>\n                  <label htmlFor=\"username\">Username</label>\n                  <input\n                    type=\"text\"\n                    id=\"username\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                  />\n                  <label htmlFor=\"password\">Password</label>\n                  <input\n                    type=\"password\"\n                    id=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                  <div className=\"input-group mb-3\">\n                    <label\n                      className=\"input-group-text\"\n                      htmlFor=\"inputGroupSelect01\"\n                    >\n                      Login as\n                    </label>\n                    <select\n                      className=\"form-select\"\n                      id=\"inputGroupSelect01\"\n                      onChange={(e) => setRole(e.target.value)} // Set the role value\n                    >\n                      <option selected>Choose...</option>\n                      <option value=\"Customer\">Customer</option>\n                      <option value=\"Travel Agent\">Travel Agent</option>\n                      <option value=\"Crew\">Crew</option>\n                      <option value=\"System Admin\">System Admin</option>\n                    </select>\n                  </div>\n\n                  <button type=\"button\" onClick={handleLogin}>\n                    Login\n                  </button>\n                </form>\n              </div>\n            </div>\n          )}\n\n        {selectedOption === \"cancel ticket\" && (\n          <div className=\"ticket-id-input\">\n            <label htmlFor=\"ticketId\">Enter your ticket ID</label>\n            <input\n              type=\"text\"\n              id=\"ticketId\"\n              value={ticketId}\n              onChange={(e) => setTicketId(e.target.value)}\n            />\n            <button onClick={() => setSelectedOption(null)}>Go back</button>\n          </div>\n        )}\n\n        {showTicketPurchaseForm && (\n          <div className=\"ticket-purchase-form\">\n            <h4>Purchase Ticket</h4>\n            <form>\n              {/* <label htmlFor=\"departureDate\">Departure Date</label>\n              <input\n                type=\"date\"\n                id=\"departureDate\"\n                value={departureDate}\n                onChange={(e) => setDepartureDate(e.target.value)}\n              /> */}\n              <label htmlFor=\"destination\">Destination</label>\n              {/* {<input\n                type=\"text\"\n                id=\"destination\"\n                value={destination}\n                onChange={(e) => setDestination(e.target.value)}\n              />} */}\n\n              <select\n                className=\"form-select\"\n                id=\"inputGroupSelect01\"\n                value={selectedDest}\n                onChange={(e) => setSelectedDest(e.target.value)}\n              >\n                <option value=\"\">Choose...</option>\n                {destOptions.map((destination, index) => (\n                  <option key={index} value={destination}>\n                    {destination}\n                  </option>\n                ))}\n              </select>\n\n              {/* <label htmlFor=\"origin\">Origin</label>\n              <input\n                type=\"text\"\n                id=\"origin\"\n                value={origin}\n                onChange={(e) => setOrigin(e.target.value)}\n              /> */}\n              <button type=\"button\" onClick={handleTicketPurchase}>\n                Next\n              </button>\n            </form>\n          </div>\n        )}\n        {/* {!showTicketPurchaseForm && selectedOption === \"purchase ticket\" && (\n          <SeatSelection onSeatSelect={handleSeatSelect} />\n        )} */}\n        {showSearchFlight && (\n          <div>\n            <h2>Select a Flight</h2>\n            {availableFlights.length > 0 ? (\n              <div>\n                {availableFlights.map((flight, index) => (\n                  <div key={index}>\n                    <p>\n                      Flight: {flight.flight_id}: {flight.departureCity} {flight.departureCountry} {flight.departureAirport}\n                    </p>\n                    <p>\n                      Departure: {flight.departureDate} {flight.departureTime} - Arrival: {flight.arrivalDate} {flight.arrivalTime}\n                    </p>\n                    <button onClick={() => {\n                      handleFlightSelection(flight.flight_id);\n                      }}>\n                      Select this Flight\n                    </button>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <p>No flights available for the selected destination.</p>\n            )}\n          </div>\n        )}\n        {showSeatSelection &&\n          !showTicketPurchaseForm &&\n          selectedOption === \"purchase ticket\" && (\n            <SeatSelection onSeatSelect={handleSeatSelect} flightID={sendFlightID} />\n          )}\n        {showInsurance && (\n          <Insurance onInsuranceSubmit={handleInsuranceContinue} />\n        )}\n        {showPayment && <Payment onPaymentSubmit={handlePaymentSubmit} />}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}