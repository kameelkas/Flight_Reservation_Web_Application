{"version":3,"sources":["SeatSelection.js","Payment.js","App.js","reportWebVitals.js","index.js"],"names":["SeatSelection","_ref","onSeatSelect","selectedSeat","setSelectedSeat","useState","handleSeatClick","section","row","seat","React","createElement","className","renderSeats","seatMap","s","sectionRows","i","j","seatNumber","isSelected","push","key","concat","onClick","handleContinue","Payment","onPaymentSubmit","cardNumber","setCardNumber","expiryMonth","setExpiryMonth","expiryYear","setExpiryYear","cvv","setCvv","onSubmit","e","preventDefault","expiryDate","htmlFor","type","id","value","onChange","target","maxLength","placeholder","App","selectedOption","setSelectedOption","showModal","setShowModal","username","setUsername","password","setPassword","loggedInUser","setLoggedInUser","showTicketPurchaseForm","setShowTicketPurchaseForm","departureDate","setDepartureDate","destination","setDestination","origin","setOrigin","ticketId","setTicketId","role","setRole","showSeatSelection","setShowSeatSelection","showPayment","setShowPayment","showInsurance","setShowInsurance","destOptions","setDestOptions","selectedDest","setSelectedDest","handleButtonClick","option","lowerCaseOption","toLowerCase","getAllDestinations","getAllFlightsForLocation","getSeatPrice","async","recieve","fetch","method","headers","Content-Type","destList","json","console","log","seatPrice","allFlightsOfLocation","handleModalClose","handleLogout","href","selected","handleLogin","handleTicketPurchase","handleSeatSelect","continueToInsurance","Insurance","onInsuranceSubmit","handleInsuranceContinue","paymentDetails","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.908bc742.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./SeatSelection.css\"; // Import the CSS file for styling\n\nfunction SeatSelection({ onSeatSelect }) {\n  const rows = 9;\n  const seatsPerRow = 3;\n  const sections = 2; // Number of sections\n  const [selectedSeat, setSelectedSeat] = useState(null);\n\n  const handleSeatClick = (section, row, seat) => {\n    // If the clicked seat is already selected, deselect it\n    if (\n      selectedSeat &&\n      selectedSeat.section === section &&\n      selectedSeat.row === row &&\n      selectedSeat.seat === seat\n    ) {\n      setSelectedSeat(null);\n      onSeatSelect(null, null, null); // Notify the parent component of deselection\n    } else {\n      setSelectedSeat({ section, row, seat });\n      onSeatSelect(section, row, seat); // Notify the parent component of the selected seat\n    }\n  };\n\n  const handleContinue = () => {\n    // Handle continue button action here\n    // You can trigger an action or proceed to the next step\n    // For now, it just deselects the seat\n    setSelectedSeat(null);\n    onSeatSelect(null, null, null); // Notify the parent component of deselection\n    // Add your logic to proceed after seat selection\n  };\n\n  const renderSeats = () => {\n    const seatMap = [];\n    for (let s = 0; s < sections; s++) {\n      const sectionRows = [];\n      for (let i = 0; i < rows; i++) {\n        const row = [];\n        for (let j = 0; j < seatsPerRow; j++) {\n          const seatNumber = j + 1;\n          const isSelected =\n            selectedSeat &&\n            selectedSeat.section === s &&\n            selectedSeat.row === i &&\n            selectedSeat.seat === j;\n          row.push(\n            <button\n              key={`seat-${s}-${i}-${j}`}\n              onClick={() => handleSeatClick(s, i, j)}\n              className={`seat ${isSelected ? \"selected\" : \"\"}`}\n            >\n              {`S${s + 1}-R${i + 1}-Seat${seatNumber}`}\n            </button>\n          );\n        }\n        sectionRows.push(\n          <div key={`row-${s}-${i}`} className=\"seat-row\">\n            {row}\n          </div>\n        );\n      }\n      seatMap.push(\n        <div key={`section-${s}`} className=\"section\">\n          <h2>Section {s + 1}</h2>\n          <div className=\"seat-map\">{sectionRows}</div>\n        </div>\n      );\n    }\n    return seatMap;\n  };\n\n  return (\n    <div className=\"seat-selection\">\n      {renderSeats()}\n      {selectedSeat && (\n        <button className=\"continue-button\" onClick={handleContinue}>\n          Continue\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default SeatSelection;\n","import React, { useState } from \"react\";\nimport \"./Payment.css\";\n\nfunction Payment({ onPaymentSubmit }) {\n  const [cardNumber, setCardNumber] = useState(\"\");\n  const [expiryMonth, setExpiryMonth] = useState(\"\");\n  const [expiryYear, setExpiryYear] = useState(\"\");\n  const [cvv, setCvv] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const expiryDate = expiryMonth + \"/\" + expiryYear; // Combine month and year\n    onPaymentSubmit({ cardNumber, expiryDate, cvv });\n  };\n\n  return (\n    <div className=\"payment-form\">\n      <h2>Payment Details</h2>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"cardNumber\">Card Number</label>\n        <input\n          type=\"text\"\n          id=\"cardNumber\"\n          value={cardNumber}\n          onChange={(e) => setCardNumber(e.target.value)}\n        />\n        <div className=\"expiry-fields\">\n          <div>\n            <label htmlFor=\"expiryMonth\">Expiry Month</label>\n            <input\n              type=\"text\"\n              id=\"expiryMonth\"\n              value={expiryMonth}\n              onChange={(e) => setExpiryMonth(e.target.value)}\n              maxLength=\"2\" // Limit input to 2 characters\n              placeholder=\"MM\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"expiryYear\">Expiry Year</label>\n            <input\n              type=\"text\"\n              id=\"expiryYear\"\n              value={expiryYear}\n              onChange={(e) => setExpiryYear(e.target.value)}\n              maxLength=\"4\" // Limit input to 4 characters\n              placeholder=\"YYYY\"\n            />\n          </div>\n        </div>\n        <label htmlFor=\"cvv\">CVV</label>\n        <input\n          type=\"text\"\n          id=\"cvv\"\n          value={cvv}\n          onChange={(e) => setCvv(e.target.value)}\n        />\n        <button type=\"submit\">Submit Payment</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Payment;","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport SeatSelection from \"./SeatSelection\";\nimport Insurance from \"./Insurance\";\nimport Payment from \"./Payment\";\n\nfunction App() {\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const [showTicketPurchaseForm, setShowTicketPurchaseForm] = useState(false);\n  const [departureDate, setDepartureDate] = useState(\"\");\n  const [destination, setDestination] = useState(\"\");\n  const [origin, setOrigin] = useState(\"\");\n  const [ticketId, setTicketId] = useState(\"\");\n  const [role, setRole] = useState(\"\"); // State to store the selected role\n  const [showSeatSelection, setShowSeatSelection] = useState(false);\n  const [showPayment, setShowPayment] = useState(false);\n  const [showInsurance, setShowInsurance] = useState(false);\n  const [destOptions, setDestOptions] = ([]);\n  const [selectedDest, setSelectedDest] = useState('');\n\n  const handleButtonClick = (option) => {\n    const lowerCaseOption = option.toLowerCase();\n    setSelectedOption(lowerCaseOption);\n    if (lowerCaseOption === \"member\") {\n      setShowModal(true);\n      setShowTicketPurchaseForm(false);\n    } else if (lowerCaseOption === \"guest\") {\n      // Directly show ticket purchase options for guests\n      setShowTicketPurchaseForm(true);\n      setShowModal(false);\n      setSelectedOption(\"purchase ticket\"); // Ensure this is set for guests\n    } else if (lowerCaseOption === \"purchase ticket\") {\n      setShowTicketPurchaseForm(true);\n      setShowModal(false);\n    } else if (lowerCaseOption === \"cancel ticket\") {\n      setShowTicketPurchaseForm(false);\n      setShowModal(false);\n      setSelectedOption(lowerCaseOption);\n    }\n\n    getAllDestinations();\n    getAllFlightsForLocation();\n    getSeatPrice();\n\n  };\n\n  const getAllDestinations = async () => {\n    const recieve = await fetch(\n      `http://localhost:8080/FlightApp/Flight/GetAllDestinations`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    const destList = await recieve.json();\n    console.log(destList);\n    setDestOptions(destList);\n  };\n\n  const getSeatPrice = async () => {\n    const recieve = await fetch(\n      `http://localhost:8080/FlightApp/Ticket/GetPrice/2`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    const seatPrice = await recieve.json();\n    console.log(seatPrice);\n  };\n\n  const getAllFlightsForLocation = async () => {\n    const recieve = await fetch(\n      `http://localhost:8080/FlightApp/Flight/GetAllFlightsByDestination/London`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    const allFlightsOfLocation = await recieve.json();\n    console.log(allFlightsOfLocation);\n  };\n\n  //http://localhost:8080/FlightApp/Flight/GetAllFlightsByDestination/London\n\n\n\n  \n\n  const handleModalClose = () => {\n    setShowModal(false);\n    setUsername(\"\");\n    setPassword(\"\");\n    setRole(\"\"); // Reset the role when the modal is closed\n  };\n\n  const handleLogin = () => {\n    console.log(\"Username:\", username);\n    console.log(\"Password:\", password);\n    console.log(\"Role:\", role); // Log the selected role\n    setLoggedInUser(username);\n    handleModalClose();\n  };\n\n  const handleTicketPurchase = () => {\n    // console.log(\"Departure Date:\", departureDate);\n    console.log(\"Destination:\", destination);\n    // console.log(\"Origin:\", origin);\n    setShowTicketPurchaseForm(false);\n    setShowSeatSelection(true);\n  };\n\n  const handleLogout = () => {\n    setLoggedInUser(null);\n    setSelectedOption(null);\n    setShowModal(false);\n    setUsername(\"\");\n    setPassword(\"\");\n    setShowTicketPurchaseForm(false);\n    setDepartureDate(\"\");\n    setDestination(\"\");\n    setOrigin(\"\");\n  };\n\n  const handleSeatSelect = (section, row, seat, continueToInsurance) => {\n    if (continueToInsurance) {\n      setShowSeatSelection(false);\n      setShowInsurance(true);\n      // Save the selected seat info if necessary\n    }\n    // ... existing seat selection logic ...\n  };\n  const handlePaymentSubmit = (paymentDetails) => {\n    console.log(\"Payment Details:\", paymentDetails);\n    // Handle the payment submission logic here\n  };\n\n  const handleInsuranceContinue = () => {\n    setShowInsurance(false);\n    setShowPayment(true);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <h2 className=\"title\">Flight Booker</h2>\n        {loggedInUser && (\n          <div className=\"user-info\">\n            <span>Logged in as {loggedInUser}</span>\n            <button onClick={handleLogout}>Log out</button>\n          </div>\n        )}\n      </div>\n      <div className=\"main text-center mt-5\">\n        {!loggedInUser && selectedOption === null && (\n          <div className=\"d-grid gap-2 col-6 mx-auto\">\n            <h4>Continue As</h4>\n            <button\n              className=\"btn btn-primary\"\n              type=\"button\"\n              onClick={() => handleButtonClick(\"member\")}\n            >\n              Member\n            </button>\n            <button\n              className=\"btn btn-primary\"\n              type=\"button\"\n              onClick={() => handleButtonClick(\"guest\")}\n            >\n              Guest\n            </button>\n            <a\n              href=\"#\"\n              className=\"underlined-text\"\n              onClick={() => handleButtonClick(\"Third Option\")}\n            >\n              Don't have an account? Sign up here\n            </a>\n          </div>\n        )}\n\n        {loggedInUser &&\n          !showTicketPurchaseForm &&\n          selectedOption !== \"cancel ticket\" &&\n          selectedOption !== \"purchase ticket\" ? (\n          <div className=\"ticket-options\">\n            <button\n              className=\"btn btn-primary\"\n              type=\"button\"\n              onClick={() => handleButtonClick(\"purchase ticket\")}\n            >\n              Purchase Ticket\n            </button>\n            <button\n              className=\"btn btn-secondary\"\n              type=\"button\"\n              onClick={() => handleButtonClick(\"cancel ticket\")}\n            >\n              Cancel Ticket\n            </button>\n          </div>\n        ) : null}\n\n        {showModal &&\n          (selectedOption === \"member\" || selectedOption === \"Member\") && (\n            <div className=\"modal\">\n              <div className=\"modal-content\">\n                <span className=\"close\" onClick={handleModalClose}>\n                  &times;\n                </span>\n                <h2>Member Login</h2>\n                <form>\n                  <label htmlFor=\"username\">Username</label>\n                  <input\n                    type=\"text\"\n                    id=\"username\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                  />\n                  <label htmlFor=\"password\">Password</label>\n                  <input\n                    type=\"password\"\n                    id=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                  <div className=\"input-group mb-3\">\n                    <label\n                      className=\"input-group-text\"\n                      htmlFor=\"inputGroupSelect01\"\n                    >\n                      Login as\n                    </label>\n                    <select\n                      className=\"form-select\"\n                      id=\"inputGroupSelect01\"\n                      onChange={(e) => setRole(e.target.value)} // Set the role value\n                    >\n                      <option selected>Choose...</option>\n                      <option value=\"Customer\">Customer</option>\n                      <option value=\"Travel Agent\">Travel Agent</option>\n                      <option value=\"Crew\">Crew</option>\n                      <option value=\"System Admin\">System Admin</option>\n                    </select>\n                  </div>\n\n                  <button type=\"button\" onClick={handleLogin}>\n                    Login\n                  </button>\n                </form>\n              </div>\n            </div>\n          )}\n\n        {selectedOption === \"cancel ticket\" && (\n          <div className=\"ticket-id-input\">\n            <label htmlFor=\"ticketId\">Enter your ticket ID</label>\n            <input\n              type=\"text\"\n              id=\"ticketId\"\n              value={ticketId}\n              onChange={(e) => setTicketId(e.target.value)}\n            />\n            <button onClick={() => setSelectedOption(null)}>Go back</button>\n          </div>\n        )}\n\n        {showTicketPurchaseForm && (\n          <div className=\"ticket-purchase-form\">\n            <h4>Purchase Ticket</h4>\n            <form>\n              {/* <label htmlFor=\"departureDate\">Departure Date</label>\n              <input\n                type=\"date\"\n                id=\"departureDate\"\n                value={departureDate}\n                onChange={(e) => setDepartureDate(e.target.value)}\n              /> */}\n              <label htmlFor=\"destination\">Destination</label>\n              {<input\n                type=\"text\"\n                id=\"destination\"\n                value={destination}\n                onChange={(e) => setDestination(e.target.value)}\n              />}\n              \n              {/* <label htmlFor=\"origin\">Origin</label>\n              <input\n                type=\"text\"\n                id=\"origin\"\n                value={origin}\n                onChange={(e) => setOrigin(e.target.value)}\n              /> */}\n              <button type=\"button\" onClick={handleTicketPurchase}>\n                Next\n              </button>\n            </form>\n          </div>\n        )}\n        {/* {!showTicketPurchaseForm && selectedOption === \"purchase ticket\" && (\n          <SeatSelection onSeatSelect={handleSeatSelect} />\n        )} */}\n        {showSeatSelection &&\n          !showTicketPurchaseForm &&\n          selectedOption === \"purchase ticket\" && (\n            <SeatSelection onSeatSelect={handleSeatSelect} />\n          )}\n        {showInsurance && (\n          <Insurance onInsuranceSubmit={handleInsuranceContinue} />\n        )}\n        {showPayment && <Payment onPaymentSubmit={handlePaymentSubmit} />}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}