{"version":3,"sources":["SeatSelection.js","App.js","reportWebVitals.js","index.js"],"names":["SeatSelection","_ref","onSeatSelect","selectedSeat","setSelectedSeat","useState","handleSeatClick","section","row","seat","React","createElement","className","renderSeats","seatMap","s","sectionRows","i","j","seatNumber","isSelected","push","key","concat","onClick","handleContinue","App","selectedOption","setSelectedOption","showModal","setShowModal","username","setUsername","password","setPassword","loggedInUser","setLoggedInUser","showTicketPurchaseForm","setShowTicketPurchaseForm","departureDate","setDepartureDate","destination","setDestination","origin","setOrigin","ticketId","setTicketId","role","setRole","handleButtonClick","option","lowerCaseOption","toLowerCase","handleModalClose","handleLogout","type","href","htmlFor","id","value","onChange","e","target","selected","handleLogin","console","log","handleTicketPurchase","handleSeatSelect","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.93c087b6.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./SeatSelection.css\"; // Import the CSS file for styling\n\nfunction SeatSelection({ onSeatSelect }) {\n  const rows = 9;\n  const seatsPerRow = 3;\n  const sections = 2; // Number of sections\n  const [selectedSeat, setSelectedSeat] = useState(null);\n\n  const handleSeatClick = (section, row, seat) => {\n    // If the clicked seat is already selected, deselect it\n    if (\n      selectedSeat &&\n      selectedSeat.section === section &&\n      selectedSeat.row === row &&\n      selectedSeat.seat === seat\n    ) {\n      setSelectedSeat(null);\n      onSeatSelect(null, null, null); // Notify the parent component of deselection\n    } else {\n      setSelectedSeat({ section, row, seat });\n      onSeatSelect(section, row, seat); // Notify the parent component of the selected seat\n    }\n  };\n\n  const handleContinue = () => {\n    // Handle continue button action here\n    // You can trigger an action or proceed to the next step\n    // For now, it just deselects the seat\n    setSelectedSeat(null);\n    onSeatSelect(null, null, null); // Notify the parent component of deselection\n    // Add your logic to proceed after seat selection\n  };\n\n  const renderSeats = () => {\n    const seatMap = [];\n    for (let s = 0; s < sections; s++) {\n      const sectionRows = [];\n      for (let i = 0; i < rows; i++) {\n        const row = [];\n        for (let j = 0; j < seatsPerRow; j++) {\n          const seatNumber = j + 1;\n          const isSelected =\n            selectedSeat &&\n            selectedSeat.section === s &&\n            selectedSeat.row === i &&\n            selectedSeat.seat === j;\n          row.push(\n            <button\n              key={`seat-${s}-${i}-${j}`}\n              onClick={() => handleSeatClick(s, i, j)}\n              className={`seat ${isSelected ? \"selected\" : \"\"}`}\n            >\n              {`S${s + 1}-R${i + 1}-Seat${seatNumber}`}\n            </button>\n          );\n        }\n        sectionRows.push(\n          <div key={`row-${s}-${i}`} className=\"seat-row\">\n            {row}\n          </div>\n        );\n      }\n      seatMap.push(\n        <div key={`section-${s}`} className=\"section\">\n          <h2>Section {s + 1}</h2>\n          <div className=\"seat-map\">{sectionRows}</div>\n        </div>\n      );\n    }\n    return seatMap;\n  };\n\n  return (\n    <div className=\"seat-selection\">\n      {renderSeats()}\n      {selectedSeat && (\n        <button className=\"continue-button\" onClick={handleContinue}>\n          Continue\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default SeatSelection;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport SeatSelection from \"./SeatSelection\";\n\nfunction App() {\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const [showTicketPurchaseForm, setShowTicketPurchaseForm] = useState(false);\n  const [departureDate, setDepartureDate] = useState(\"\");\n  const [destination, setDestination] = useState(\"\");\n  const [origin, setOrigin] = useState(\"\");\n  const [ticketId, setTicketId] = useState(\"\");\n  const [role, setRole] = useState(\"\"); // State to store the selected role\n\n  const handleButtonClick = (option) => {\n    const lowerCaseOption = option.toLowerCase();\n    setSelectedOption(lowerCaseOption);\n    if (lowerCaseOption === \"member\") {\n      setShowModal(true);\n      setShowTicketPurchaseForm(false);\n    } else if (lowerCaseOption === \"purchase ticket\") {\n      setShowTicketPurchaseForm(true);\n      setShowModal(false);\n    } else if (lowerCaseOption === \"cancel ticket\") {\n      setShowTicketPurchaseForm(false);\n      setShowModal(false);\n      setSelectedOption(lowerCaseOption);\n    }\n  };\n\n  const handleModalClose = () => {\n    setShowModal(false);\n    setUsername(\"\");\n    setPassword(\"\");\n    setRole(\"\"); // Reset the role when the modal is closed\n  };\n\n  const handleLogin = () => {\n    console.log(\"Username:\", username);\n    console.log(\"Password:\", password);\n    console.log(\"Role:\", role); // Log the selected role\n    setLoggedInUser(username);\n    handleModalClose();\n  };\n\n  const handleTicketPurchase = () => {\n    console.log(\"Departure Date:\", departureDate);\n    console.log(\"Destination:\", destination);\n    console.log(\"Origin:\", origin);\n    setShowTicketPurchaseForm(false);\n  };\n\n  const handleLogout = () => {\n    setLoggedInUser(null);\n    setSelectedOption(null);\n    setShowModal(false);\n    setUsername(\"\");\n    setPassword(\"\");\n    setShowTicketPurchaseForm(false);\n    setDepartureDate(\"\");\n    setDestination(\"\");\n    setOrigin(\"\");\n  };\n  const handleSeatSelect = (row, seat) => {\n    // Handle seat selection logic here\n    console.log(`Selected Seat: Row ${row} - Seat ${seat}`);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <h2 className=\"title\">Flight Booker</h2>\n        {loggedInUser && (\n          <div className=\"user-info\">\n            <span>Logged in as {loggedInUser}</span>\n            <button onClick={handleLogout}>Log out</button>\n          </div>\n        )}\n      </div>\n      <div className=\"main text-center mt-5\">\n        {!loggedInUser && selectedOption === null && (\n          <div className=\"d-grid gap-2 col-6 mx-auto\">\n            <h4>Continue As</h4>\n            <button\n              className=\"btn btn-primary\"\n              type=\"button\"\n              onClick={() => handleButtonClick(\"member\")}\n            >\n              Member\n            </button>\n            <button\n              className=\"btn btn-primary\"\n              type=\"button\"\n              onClick={() => handleButtonClick(\"guest\")}\n            >\n              Guest\n            </button>\n            <a\n              href=\"#\"\n              className=\"underlined-text\"\n              onClick={() => handleButtonClick(\"Third Option\")}\n            >\n              Don't have an account? Sign up here\n            </a>\n          </div>\n        )}\n\n        {loggedInUser &&\n        !showTicketPurchaseForm &&\n        selectedOption !== \"cancel ticket\" &&\n        selectedOption !== \"purchase ticket\" ? (\n          <div className=\"ticket-options\">\n            <button\n              className=\"btn btn-primary\"\n              type=\"button\"\n              onClick={() => handleButtonClick(\"purchase ticket\")}\n            >\n              Purchase Ticket\n            </button>\n            <button\n              className=\"btn btn-secondary\"\n              type=\"button\"\n              onClick={() => handleButtonClick(\"cancel ticket\")}\n            >\n              Cancel Ticket\n            </button>\n          </div>\n        ) : null}\n\n        {showModal &&\n          (selectedOption === \"member\" || selectedOption === \"Member\") && (\n            <div className=\"modal\">\n              <div className=\"modal-content\">\n                <span className=\"close\" onClick={handleModalClose}>\n                  &times;\n                </span>\n                <h2>Member Login</h2>\n                <form>\n                  <label htmlFor=\"username\">Username</label>\n                  <input\n                    type=\"text\"\n                    id=\"username\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                  />\n                  <label htmlFor=\"password\">Password</label>\n                  <input\n                    type=\"password\"\n                    id=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                  <div className=\"input-group mb-3\">\n                    <label\n                      className=\"input-group-text\"\n                      htmlFor=\"inputGroupSelect01\"\n                    >\n                      Login as\n                    </label>\n                    <select\n                      className=\"form-select\"\n                      id=\"inputGroupSelect01\"\n                      onChange={(e) => setRole(e.target.value)} // Set the role value\n                    >\n                      <option selected>Choose...</option>\n                      <option value=\"Customer\">Customer</option>\n                      <option value=\"Travel Agent\">Travel Agent</option>\n                      <option value=\"Crew\">Crew</option>\n                      <option value=\"System Admin\">System Admin</option>\n                    </select>\n                  </div>\n\n                  <button type=\"button\" onClick={handleLogin}>\n                    Login\n                  </button>\n                </form>\n              </div>\n            </div>\n          )}\n\n        {selectedOption === \"cancel ticket\" && (\n          <div className=\"ticket-id-input\">\n            <label htmlFor=\"ticketId\">Enter your ticket ID</label>\n            <input\n              type=\"text\"\n              id=\"ticketId\"\n              value={ticketId}\n              onChange={(e) => setTicketId(e.target.value)}\n            />\n            <button onClick={() => setSelectedOption(null)}>Go back</button>\n          </div>\n        )}\n\n        {showTicketPurchaseForm && (\n          <div className=\"ticket-purchase-form\">\n            <h4>Purchase Ticket</h4>\n            <form>\n              <label htmlFor=\"departureDate\">Departure Date</label>\n              <input\n                type=\"date\"\n                id=\"departureDate\"\n                value={departureDate}\n                onChange={(e) => setDepartureDate(e.target.value)}\n              />\n              <label htmlFor=\"destination\">Destination</label>\n              <input\n                type=\"text\"\n                id=\"destination\"\n                value={destination}\n                onChange={(e) => setDestination(e.target.value)}\n              />\n              <label htmlFor=\"origin\">Origin</label>\n              <input\n                type=\"text\"\n                id=\"origin\"\n                value={origin}\n                onChange={(e) => setOrigin(e.target.value)}\n              />\n              <button type=\"button\" onClick={handleTicketPurchase}>\n                Next\n              </button>\n            </form>\n          </div>\n        )}\n        {!showTicketPurchaseForm && selectedOption === \"purchase ticket\" && (\n          <SeatSelection onSeatSelect={handleSeatSelect} />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}