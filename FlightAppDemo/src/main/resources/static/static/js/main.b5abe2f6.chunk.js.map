{"version":3,"sources":["SeatSelection.js","Insurance.js","Payment.js","App.js","reportWebVitals.js","index.js"],"names":["SeatSelection","_ref","onSeatSelect","flightID","selectedSeat","setSelectedSeat","useState","takenSeats","setTakenSeats","useEffect","async","response","fetch","concat","method","headers","Content-Type","data","json","error","console","fetchTakenSeats","isSeatTaken","index","handleSeatClick","section","row","seat","React","createElement","Fragment","className","renderSeats","seatMap","s","sectionRows","i","j","seatNumber","isSelected","isDisabled","push","key","onClick","disabled","handleContinue","log","seatIDToSend","Insurance","onInsuranceSubmit","setInsurance","chosenInsurance","handleInsuranceSubmit","Payment","onPaymentSubmit","cardNumber","setCardNumber","expiryMonth","setExpiryMonth","expiryYear","setExpiryYear","cvv","setCvv","onSubmit","e","preventDefault","expiryDate","htmlFor","type","id","value","onChange","target","maxLength","placeholder","App","selectedOption","setSelectedOption","showModal","setShowModal","username","setUsername","password","setPassword","loggedInUser","setLoggedInUser","showTicketPurchaseForm","setShowTicketPurchaseForm","ticketId","setTicketId","role","setRole","showSeatSelection","setShowSeatSelection","showPayment","setShowPayment","showInsurance","setShowInsurance","destOptions","setDestOptions","selectedDest","setSelectedDest","availableFlights","setAvailableFlights","showSearchFlight","setShowSearchFlight","sendFlightID","setSendFlightID","signupUsername","setSignupUsername","signupEmail","setSignupEmail","emailError","setEmailError","signupPhone","setSignupPhone","signupPassword","setSignupPassword","signupAddress","setSignupAddress","signupPostalCode","setSignupPostalCode","signupCity","setSignupCity","signupCountry","setSignupCountry","insurance","crewID","setCrewID","crewPassword","setCrewPassword","showPassnegerList","setShowPassengerList","passengerList","setPassengerList","uniqueDestOptions","Set","emailRegex","showCrewLogin","setShowCrewLogin","handleButtonClick","option","lowerCaseOption","toLowerCase","getAllDestinations","ok","Error","destList","handleModalClose","handleLogout","href","test","signupData","name","emailAddr","phoneNum","customerPassword","body","JSON","stringify","required","style","color","selected","handleLogin","recieve","res","customers","window","alert","checkCrewLogin","length","map","passenger","customerID","destination","handleTicketPurchase","allFlightsOfLocation","getAllFlightsForLocation","flight","flight_id","departureCity","departureCountry","departureAirport","departureDate","departureTime","arrivalDate","arrivalTime","handleFlightSelection","handleSeatSelect","continueToInsurance","handleInsuranceContinue","paymentDetails","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.b5abe2f6.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./SeatSelection.css\"; // Import the CSS file for styling\r\n\r\nfunction SeatSelection({ onSeatSelect, flightID }) {\r\n  const rows = 3;\r\n  const seatsPerRow = 5;\r\n  const sections = 1; // Number of sections\r\n  const [selectedSeat, setSelectedSeat] = useState(null);\r\n  const [takenSeats, setTakenSeats] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch taken seats from the backend\r\n    const fetchTakenSeats = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:8080/FlightApp/Seat/GetAllTakenOrNot/ByFlightID/${flightID}`,\r\n          {\r\n            method: \"GET\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        const data = await response.json();\r\n        setTakenSeats(data); \r\n      } catch (error) {\r\n        console.error(\"Error fetching taken seats:\", error);\r\n      }\r\n    };\r\n\r\n    fetchTakenSeats();\r\n  }, [flightID]);\r\n\r\n  const isSeatTaken = (index) => {\r\n    return takenSeats[index];\r\n  };\r\n\r\n  const handleSeatClick = (section, row, seat) => {\r\n    const seatIndex = row * seatsPerRow + seat;\r\n\r\n    if (isSeatTaken(seatIndex)) {\r\n      // If the seat is already taken, do not proceed\r\n      return;\r\n    }\r\n\r\n    if (\r\n      selectedSeat &&\r\n      selectedSeat.section === section &&\r\n      selectedSeat.row === row &&\r\n      selectedSeat.seat === seat\r\n    ) {\r\n      setSelectedSeat(null);\r\n      onSeatSelect(null, null, null);\r\n    } else {\r\n      setSelectedSeat({ section, row, seat });\r\n      onSeatSelect(section, row, seat);\r\n    }\r\n  };\r\n\r\n  const handleContinue = () => {\r\n    onSeatSelect(\r\n      selectedSeat.section,\r\n      selectedSeat.row,\r\n      selectedSeat.seat,\r\n      true\r\n    ); // Adding a flag to indicate continuation\r\n    console.log(selectedSeat.row);\r\n    console.log(selectedSeat.seat);\r\n    console.log(flightID);\r\n    const seatIDToSend = (((flightID - 1)*15) + (selectedSeat.row*5) + (selectedSeat.seat + 1));\r\n    console.log(seatIDToSend);\r\n\r\n    fetch(`http://localhost:8080/FlightApp/Seat/SeatTaken/${seatIDToSend}`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n  };\r\n\r\n  const renderSeats = () => {\r\n    const seatMap = [];\r\n    for (let s = 0; s < sections; s++) {\r\n      const sectionRows = [];\r\n      for (let i = 0; i < rows; i++) {\r\n        const row = [];\r\n        for (let j = 0; j < seatsPerRow; j++) {\r\n          const seatNumber = j + 1;\r\n          const isSelected =\r\n            selectedSeat &&\r\n            selectedSeat.section === s &&\r\n            selectedSeat.row === i &&\r\n            selectedSeat.seat === j;\r\n          const seatIndex = i * seatsPerRow + j;\r\n          const isDisabled = isSeatTaken(seatIndex);\r\n\r\n          row.push(\r\n            <button\r\n              key={`seat-${s}-${i}-${j}`}\r\n              onClick={() => handleSeatClick(s, i, j)}\r\n              className={`seat ${isSelected ? \"selected\" : \"\"}`}\r\n              disabled={isDisabled}\r\n            >\r\n              {`S${s + 1}-R${i + 1}-Seat${seatNumber}`}\r\n            </button>\r\n          );\r\n        }\r\n        sectionRows.push(\r\n          <div key={`row-${s}-${i}`} className=\"seat-row\">\r\n            {row}\r\n          </div>\r\n        );\r\n      }\r\n      seatMap.push(\r\n        <div key={`section-${s}`} className=\"section\">\r\n          <h2>Seat Map</h2>\r\n          <div className=\"seat-map\">{sectionRows}</div>\r\n        </div>\r\n      );\r\n    }\r\n    return seatMap;\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <div>\r\n      <p>Pink: Comfort</p>\r\n      <p>Orange: Business</p>\r\n      <p>Grey: Economy</p>\r\n    </div>\r\n    <div className=\"seat-selection\">\r\n      {renderSeats()}\r\n      {selectedSeat && (\r\n        <button className=\"continue-button\" onClick={handleContinue}>\r\n          Continue\r\n        </button>\r\n      )}\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SeatSelection;\r\n","import React from \"react\";\nimport \"./Insurance.css\";\n\nfunction Insurance({ onInsuranceSubmit, setInsurance }) {\n  const handleInsuranceSubmit = () => {\n    onInsuranceSubmit();\n  };\n\n  const chosenInsurance = () => {\n    setInsurance(true);\n    onInsuranceSubmit();\n  };\n\n  return (\n    <div>\n      <div className=\"flex-container\">\n        <div className=\"insurance-container\">\n          <h2>Purchase an Insurance Plan</h2>\n          <h1><b>$50.00</b></h1>\n          <br></br>\n          <div>\n            - Cancel for no additional fees\n            <br></br>- 1 free checked bag\n            <br></br>- Full refund upon cancellation\n            <br></br>\n            <br></br>\n            <button onClick={chosenInsurance}>Select</button>\n          </div>\n        </div>\n      </div>\n      <br></br>\n      <br></br>\n      <button onClick={handleInsuranceSubmit}>Skip Insurance and Pay</button>\n    </div>\n  );\n}\n\nexport default Insurance;\n","import React, { useState } from \"react\";\nimport \"./Payment.css\";\n\nfunction Payment({ onPaymentSubmit }) {\n  const [cardNumber, setCardNumber] = useState(\"\");\n  const [expiryMonth, setExpiryMonth] = useState(\"\");\n  const [expiryYear, setExpiryYear] = useState(\"\");\n  const [cvv, setCvv] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const expiryDate = expiryMonth + \"/\" + expiryYear; // Combine month and year\n    onPaymentSubmit({ cardNumber, expiryDate, cvv });\n  };\n\n  return (\n    <div className=\"payment-form\">\n      <h2>Payment Details</h2>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"cardNumber\">Card Number</label>\n        <input\n          type=\"text\"\n          id=\"cardNumber\"\n          value={cardNumber}\n          onChange={(e) => setCardNumber(e.target.value)}\n        />\n        <div className=\"expiry-fields\">\n          <div>\n            <label htmlFor=\"expiryMonth\">Expiry Month</label>\n            <input\n              type=\"text\"\n              id=\"expiryMonth\"\n              value={expiryMonth}\n              onChange={(e) => setExpiryMonth(e.target.value)}\n              maxLength=\"2\" // Limit input to 2 characters\n              placeholder=\"MM\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"expiryYear\">Expiry Year</label>\n            <input\n              type=\"text\"\n              id=\"expiryYear\"\n              value={expiryYear}\n              onChange={(e) => setExpiryYear(e.target.value)}\n              maxLength=\"4\" // Limit input to 4 characters\n              placeholder=\"YYYY\"\n            />\n          </div>\n        </div>\n        <label htmlFor=\"cvv\">CVV</label>\n        <input\n          type=\"text\"\n          id=\"cvv\"\n          value={cvv}\n          onChange={(e) => setCvv(e.target.value)}\n        />\n        <button type=\"submit\">Submit Payment</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Payment;","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport SeatSelection from \"./SeatSelection\";\nimport Insurance from \"./Insurance\";\nimport Payment from \"./Payment\";\n\nfunction App() {\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const [showTicketPurchaseForm, setShowTicketPurchaseForm] = useState(false);\n  //const [departureDate, setDepartureDate] = useState(\"\");\n  //const [destination, setDestination] = useState(\"\");\n  //const [origin, setOrigin] = useState(\"\");\n  const [ticketId, setTicketId] = useState(\"\");\n  const [role, setRole] = useState(\"\"); // State to store the selected role\n  const [showSeatSelection, setShowSeatSelection] = useState(false);\n  const [showPayment, setShowPayment] = useState(false);\n  const [showInsurance, setShowInsurance] = useState(false);\n  const [destOptions, setDestOptions] = useState([]);\n  const [selectedDest, setSelectedDest] = useState(\"\");\n  const [availableFlights, setAvailableFlights] = useState([]);\n  const [showSearchFlight, setShowSearchFlight] = useState(false);\n  const [sendFlightID, setSendFlightID] = useState(0);\n  const [signupUsername, setSignupUsername] = useState(\"\");\n  const [signupEmail, setSignupEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [signupPhone, setSignupPhone] = useState(\"\");\n  const [signupPassword, setSignupPassword] = useState(\"\");\n  const [signupAddress, setSignupAddress] = useState(\"\");\n  const [signupPostalCode, setSignupPostalCode] = useState(\"\");\n  const [signupCity, setSignupCity] = useState(\"\");\n  const [signupCountry, setSignupCountry] = useState(\"\");\n  const [insurance, setInsurance] = useState(false);\n  const [crewID, setCrewID] = useState(\"\");\n  const [crewPassword, setCrewPassword] = useState(\"\");\n  const [showPassnegerList, setShowPassengerList] = useState(false);\n  const [passengerList, setPassengerList] = useState([]);\n  const uniqueDestOptions = [...new Set(destOptions)];\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  const [showCrewLogin, setShowCrewLogin] = useState(false);\n\n  const handleButtonClick = (option) => {\n    const lowerCaseOption = option.toLowerCase();\n    setSelectedOption(lowerCaseOption);\n    if (lowerCaseOption === \"member\") {\n      setShowModal(true);\n      setShowTicketPurchaseForm(false);\n    } else if (lowerCaseOption === \"guest\") {\n      // Directly show ticket purchase options for guests\n      setShowTicketPurchaseForm(true);\n      setShowModal(false);\n      setSelectedOption(\"purchase ticket\"); // Ensure this is set for guests\n    } else if (lowerCaseOption === \"purchase ticket\") {\n      setShowTicketPurchaseForm(true);\n      setShowModal(false);\n    } else if (lowerCaseOption === \"cancel ticket\") {\n      setShowTicketPurchaseForm(false);\n      setShowModal(false);\n      setSelectedOption(lowerCaseOption);\n    } else if (lowerCaseOption === \"third option\") {\n      setSelectedOption(\"signup\");\n    } else if (lowerCaseOption === \"crew view\") {\n      setShowModal(false);\n      setSelectedOption(\"crew login\");\n      setShowCrewLogin(true);\n    }\n\n    getAllDestinations();\n  };\n\n  const handleSignup = (e) => {\n    e.preventDefault();\n\n    if (!emailRegex.test(signupEmail)) {\n      setEmailError(\"Please enter a valid email address.\");\n      return;\n    }\n\n    const signupData = {\n      name: signupUsername,\n      emailAddr: signupEmail,\n      phoneNum: signupPhone,\n      customerPassword: signupPassword,\n    };\n    console.log(\"Signup Data:\", signupData);\n\n    fetch(\n      `http://localhost:8080/FlightApp/Customer/Create/${signupAddress}/${signupPostalCode}/${signupCity}/${signupCountry}`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(signupData),\n      }\n    );\n\n    setSignupUsername(\"\");\n    setSignupEmail(\"\");\n    setSignupPhone(\"\");\n    setSignupPassword(\"\");\n    setSignupAddress(\"\");\n    setSignupPostalCode(\"\");\n    setSignupCity(\"\");\n    setSignupCountry(\"\");\n\n    // ***HOW DO WE REDIRECT TO FRONT PAGE *** //\n    setSelectedOption(null); // Assuming this clears the signup form and displays initial options\n  };\n\n  useEffect(() => {\n    getAllDestinations();\n  }, []);\n\n  const getAllDestinations = async () => {\n    try {\n      const response = await fetch(\n        `http://localhost:8080/FlightApp/Flight/GetAllDestinations`,\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const destList = await response.json();\n      setDestOptions(destList); // Update state here\n    } catch (error) {\n      console.error(\"There was a problem with the fetch operation:\", error);\n    }\n  };\n\n  /*const getSeatPrice = async () => {\n    const recieve = await fetch(\n      `http://localhost:8080/FlightApp/Ticket/GetPrice/2`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    const seatPrice = await recieve.json();\n    console.log(seatPrice);\n  };*/\n\n  const getAllFlightsForLocation = async () => {\n    console.log(selectedDest);\n    const recieve = await fetch(\n      `http://localhost:8080/FlightApp/Flight/GetAllFlightsByDestination/${selectedDest}`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    const allFlightsOfLocation = await recieve.json();\n    setAvailableFlights(allFlightsOfLocation);\n    console.log(allFlightsOfLocation);\n  };\n\n  const checkCrewLogin = async () => {\n    const recieve = await fetch(\n      `http://localhost:8080/FlightApp/Crew/Validation/${crewID}/${crewPassword}`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    const res = await recieve.json();\n    if (res === true) {\n      setShowPassengerList(true);\n      setShowCrewLogin(false);\n      const recieve = await fetch(\n        `http://localhost:8080/FlightApp/Flight/GetPassengerList/${crewID}`,\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      const customers = await recieve.json();\n      setPassengerList(customers);\n      console.log(\"Returned Customers:\", customers);\n      console.log(\"Set Customers:\", passengerList);\n    } else if (res === false) {\n      setSelectedOption(null);\n      setCrewID(\"\");\n      setCrewPassword(\"\");\n      window.alert(\n        \"You have attempted to access confidential information without proper authentication credentials. Page exited\"\n      );\n    }\n  };\n\n  const handleModalClose = () => {\n    setShowModal(false);\n    setUsername(\"\");\n    setPassword(\"\");\n    setRole(\"\"); // Reset the role when the modal is closed\n  };\n\n  const handleLogin = () => {\n    console.log(\"Username:\", username);\n    console.log(\"Password:\", password);\n    console.log(\"Role:\", role); // Log the selected role\n    setLoggedInUser(username);\n    handleModalClose();\n  };\n\n  const handleTicketPurchase = () => {\n    console.log(\"Destination:\", selectedDest);\n    getAllFlightsForLocation(); // Fetch and set available flights\n    setShowTicketPurchaseForm(false);\n    setShowSearchFlight(true); // Show the flight search UI\n  };\n\n  const handleFlightSelection = (flight) => {\n    console.log(\"Selected flight:\", flight);\n    // console.log(\"CHECK:\", sendFlightID);\n    // Implement what happens after a flight is selected, e.g., storing flight data\n    // and transitioning to the seat selection phase\n    setShowSearchFlight(false);\n    setShowSeatSelection(true);\n  };\n\n  const handleLogout = () => {\n    setLoggedInUser(null);\n    setSelectedOption(null);\n    setShowModal(false);\n    setUsername(\"\");\n    setPassword(\"\");\n    setShowTicketPurchaseForm(false);\n    //setDepartureDate(\"\");\n    setSelectedDest(\"\");\n    //setOrigin(\"\");\n    setSendFlightID(0);\n    setInsurance(false);\n  };\n\n  const handleSeatSelect = (section, row, seat, continueToInsurance) => {\n    if (continueToInsurance) {\n      setShowSeatSelection(false);\n      setShowInsurance(true);\n      console.log(\"BEFORE INS CHOSEN:\", insurance);\n      // Save the selected seat info if necessary\n    }\n    // ... existing seat selection logic ...\n  };\n  const handlePaymentSubmit = (paymentDetails) => {\n    console.log(\"Payment Details:\", paymentDetails);\n    // Handle the payment submission logic here\n  };\n\n  const handleInsuranceContinue = () => {\n    setShowInsurance(false);\n    setShowPayment(true);\n    console.log(\"AFTER INS CHOSEN:\", insurance);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <h2 className=\"title\">Flight Booker</h2>\n        {loggedInUser && (\n          <div className=\"user-info\">\n            <span>Logged in as {loggedInUser}</span>\n            <button onClick={handleLogout}>Log out</button>\n          </div>\n        )}\n      </div>\n      <div className=\"main text-center mt-5\">\n        {!loggedInUser && selectedOption === null && (\n          <div className=\"d-grid gap-2 col-6 mx-auto\">\n            <h4>Continue As</h4>\n            <button\n              className=\"btn btn-primary\"\n              type=\"button\"\n              onClick={() => handleButtonClick(\"member\")}\n            >\n              Member\n            </button>\n            <button\n              className=\"btn btn-primary\"\n              type=\"button\"\n              onClick={() => handleButtonClick(\"guest\")}\n            >\n              Guest\n            </button>\n            <button\n              className=\"btn btn-primary\"\n              type=\"button\"\n              onClick={() => handleButtonClick(\"cancel ticket\")}\n            >\n              Cancel Ticket\n            </button>\n            <button\n              className=\"btn btn-primary\"\n              type=\"button\"\n              onClick={() => handleButtonClick(\"crew view\")}\n            >\n              Crew Login\n            </button>\n            <a\n              href=\"#\"\n              className=\"underlined-text\"\n              onClick={() => handleButtonClick(\"Third Option\")}\n            >\n              Don't have an account? Sign up here\n            </a>\n          </div>\n        )}\n\n        {selectedOption === \"signup\" && (\n          <div className=\"signup-form\">\n            <h2>Sign Up</h2>\n            <form onSubmit={handleSignup}>\n              <label htmlFor=\"signup-username\">First and Last Name</label>\n              <input\n                type=\"text\"\n                id=\"signup-username\"\n                value={signupUsername}\n                onChange={(e) => setSignupUsername(e.target.value)}\n                required\n              />\n              <label htmlFor=\"signup-email\">Email</label>\n              <input\n                type=\"email\"\n                id=\"signup-email\"\n                value={signupEmail}\n                onChange={(e) => {\n                  setSignupEmail(e.target.value);\n                  setEmailError(\"\"); // Clear email error on input change\n                }}\n                required\n              />\n              {emailError && <p style={{ color: \"red\" }}>{emailError}</p>}\n\n              <label htmlFor=\"signup-phone\">Phone Number</label>\n              <input\n                type=\"tel\"\n                id=\"signup-phone\"\n                value={signupPhone}\n                onChange={(e) => setSignupPhone(e.target.value)}\n                required\n              />\n              <label htmlFor=\"signup-password\">Password</label>\n              <input\n                type=\"password\"\n                id=\"signup-password\"\n                value={signupPassword}\n                onChange={(e) => setSignupPassword(e.target.value)}\n                required\n              />\n              <label htmlFor=\"signup-address\">Address</label>\n              <input\n                type=\"text\"\n                id=\"signup-address\"\n                value={signupAddress}\n                onChange={(e) => setSignupAddress(e.target.value)}\n                required\n              />\n\n              <label htmlFor=\"signup-postal-code\">Postal Code</label>\n              <input\n                type=\"text\"\n                id=\"signup-postal-code\"\n                value={signupPostalCode}\n                onChange={(e) => setSignupPostalCode(e.target.value)}\n                required\n              />\n\n              <label htmlFor=\"signup-city\">City</label>\n              <input\n                type=\"text\"\n                id=\"signup-city\"\n                value={signupCity}\n                onChange={(e) => setSignupCity(e.target.value)}\n                required\n              />\n\n              <label htmlFor=\"signup-country\">Country</label>\n              <input\n                type=\"text\"\n                id=\"signup-country\"\n                value={signupCountry}\n                onChange={(e) => setSignupCountry(e.target.value)}\n                required\n              />\n              <button type=\"submit\">Sign Up</button>\n            </form>\n          </div>\n        )}\n\n        {loggedInUser &&\n        !showTicketPurchaseForm &&\n        selectedOption !== \"cancel ticket\" &&\n        selectedOption !== \"purchase ticket\" ? (\n          <div className=\"ticket-options\">\n            <button\n              className=\"btn btn-primary\"\n              type=\"button\"\n              onClick={() => handleButtonClick(\"purchase ticket\")}\n            >\n              Purchase Ticket\n            </button>\n            {/* <button\n              className=\"btn btn-secondary\"\n              type=\"button\"\n              onClick={() => handleButtonClick(\"cancel ticket\")}\n            >\n              Cancel Ticket\n            </button> */}\n          </div>\n        ) : null}\n\n        {showModal &&\n          (selectedOption === \"member\" || selectedOption === \"Member\") && (\n            <div className=\"modal\">\n              <div className=\"modal-content\">\n                <span className=\"close\" onClick={handleModalClose}>\n                  &times;\n                </span>\n                <h2>Member Login</h2>\n                <form>\n                  <label htmlFor=\"username\">Username</label>\n                  <input\n                    type=\"text\"\n                    id=\"username\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                  />\n                  <label htmlFor=\"password\">Password</label>\n                  <input\n                    type=\"password\"\n                    id=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                  <div className=\"input-group mb-3\">\n                    <label\n                      className=\"input-group-text\"\n                      htmlFor=\"inputGroupSelect01\"\n                    >\n                      Login as\n                    </label>\n                    <select\n                      className=\"form-select\"\n                      id=\"inputGroupSelect01\"\n                      onChange={(e) => setRole(e.target.value)} // Set the role value\n                    >\n                      <option selected>Choose...</option>\n                      <option value=\"Customer\">Customer</option>\n                      <option value=\"Travel Agent\">Travel Agent</option>\n                      <option value=\"Crew\">Crew</option>\n                      <option value=\"System Admin\">System Admin</option>\n                    </select>\n                  </div>\n\n                  <button type=\"button\" onClick={handleLogin}>\n                    Login\n                  </button>\n                </form>\n              </div>\n            </div>\n          )}\n\n        {showCrewLogin && selectedOption === \"crew login\" && (\n          <div className=\"crew-login-input\">\n            <label htmlFor=\"crewId\">Enter your Crew ID</label>\n            <input\n              type=\"text\"\n              id=\"crewId\"\n              value={crewID}\n              onChange={(e) => setCrewID(e.target.value)}\n            />\n\n            <label htmlFor=\"crewPass\">Enter your Password</label>\n            <input\n              type=\"text\"\n              id=\"crewPass\"\n              value={crewPassword}\n              onChange={(e) => setCrewPassword(e.target.value)}\n            />\n            <button onClick={() => checkCrewLogin()}>Login</button>\n          </div>\n        )}\n\n        {showPassnegerList && (\n          <div className=\"crew-login-input\">\n            {passengerList.length > 0 ? (\n              <div>\n                {passengerList.map((passenger, index) => (\n                  <div key={index}>\n                    <p>Name: {passenger.name}</p>\n                    <p>Email: {passenger.emailAddr}</p>\n                    <p>Phone Number: {passenger.phoneNum}</p>\n                    <p>ID: {passenger.customerID}</p>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <p>\n                No passengers have currently booked a ticket for your flight.\n              </p>\n            )}\n          </div>\n        )}\n\n        {selectedOption === \"cancel ticket\" && (\n          <div className=\"ticket-id-input\">\n            <label htmlFor=\"ticketId\">Enter your ticket ID</label>\n            <input\n              type=\"text\"\n              id=\"ticketId\"\n              value={ticketId}\n              onChange={(e) => setTicketId(e.target.value)}\n            />\n            <button onClick={() => setSelectedOption(null)}>Go back</button>\n          </div>\n        )}\n\n        {showTicketPurchaseForm && (\n          <div className=\"ticket-purchase-form\">\n            <h4>Purchase Ticket</h4>\n            <form>\n              {/* <label htmlFor=\"departureDate\">Departure Date</label>\n              <input\n                type=\"date\"\n                id=\"departureDate\"\n                value={departureDate}\n                onChange={(e) => setDepartureDate(e.target.value)}\n              /> */}\n              <label htmlFor=\"destination\">Destination</label>\n              {/* {<input\n                type=\"text\"\n                id=\"destination\"\n                value={destination}\n                onChange={(e) => setDestination(e.target.value)}\n              />} */}\n\n              <select\n                className=\"form-select\"\n                id=\"inputGroupSelect01\"\n                value={selectedDest}\n                onChange={(e) => setSelectedDest(e.target.value)}\n              >\n                <option value=\"\">Choose...</option>\n                {uniqueDestOptions.map((destination, index) => (\n                  <option key={index} value={destination}>\n                    {destination}\n                  </option>\n                ))}\n              </select>\n\n              {/* <label htmlFor=\"origin\">Origin</label>\n              <input\n                type=\"text\"\n                id=\"origin\"\n                value={origin}\n                onChange={(e) => setOrigin(e.target.value)}\n              /> */}\n              <button type=\"button\" onClick={handleTicketPurchase}>\n                Next\n              </button>\n            </form>\n          </div>\n        )}\n        {/* {!showTicketPurchaseForm && selectedOption === \"purchase ticket\" && (\n          <SeatSelection onSeatSelect={handleSeatSelect} />\n        )} */}\n        {showSearchFlight && (\n          <div>\n            <h2>Select a Flight</h2>\n            {availableFlights.length > 0 ? (\n              <div>\n                {availableFlights.map((flight, index) => (\n                  <div key={index}>\n                    <p>\n                      Flight: {flight.flight_id}: {flight.departureCity}{\" \"}\n                      {flight.departureCountry} {flight.departureAirport}\n                    </p>\n                    <p>\n                      Departure: {flight.departureDate} {flight.departureTime} -\n                      Arrival: {flight.arrivalDate} {flight.arrivalTime}\n                    </p>\n                    <button\n                      onClick={() => {\n                        setSendFlightID(flight.flight_id);\n                        handleFlightSelection(flight);\n                      }}\n                    >\n                      Select this Flight\n                    </button>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <p>No flights available for the selected destination.</p>\n            )}\n          </div>\n        )}\n        {showSeatSelection &&\n          !showTicketPurchaseForm &&\n          selectedOption === \"purchase ticket\" && (\n            <SeatSelection\n              onSeatSelect={handleSeatSelect}\n              flightID={sendFlightID}\n            />\n          )}\n        {showInsurance && (\n          <Insurance\n            onInsuranceSubmit={handleInsuranceContinue}\n            setInsurance={setInsurance}\n          />\n        )}\n        {showPayment && <Payment onPaymentSubmit={handlePaymentSubmit} />}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}